<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2768 $ -->
<!-- EN-Revision: 2715 Maintainer: freespace Status: ready -->
<sect1 id="language.function.config.load">
 <title>{config_load}</title>
 <para>
  <varname>{config_load}</varname> используется для загрузки
  конфигурационных переменных
  (<link linkend="language.config.variables"><parameter>#variables#</parameter></link>) из
  <link linkend="config.files">конфигурационных файлов</link> в шаблон.
 </para>
 <informaltable frame="all">
  <tgroup cols="5">
  <colspec colname="param" align="center" />
  <colspec colname="type" align="center" />
  <colspec colname="required" align="center" />
  <colspec colname="default" align="center" />
  <colspec colname="desc" />
  <thead>
   <row>
    <entry>Имя атрибута</entry>
    <entry>Тип</entry>
    <entry>Обязателен</entry>
    <entry>По умолчанию</entry>
    <entry>Описание</entry>
   </row>
  </thead>
  <tbody>
   <row>
    <entry>file</entry>
    <entry>string</entry>
    <entry>Да</entry>
    <entry><emphasis>n/a</emphasis></entry>
    <entry>Имя config файла для загрузки</entry>
   </row>
   <row>
    <entry>section</entry>
    <entry>string</entry>
    <entry>Нет</entry>
    <entry><emphasis>n/a</emphasis></entry>
    <entry>Имя секции для загрузки</entry>
   </row>
   <row>
    <entry>scope</entry>
    <entry>string</entry>
    <entry>Нет</entry>
    <entry><emphasis>local</emphasis></entry>
    <entry>
     Способ обработки области видимости загруженных
     переменных. Должен быть одинм из local, parent
     или global. local означает, что переменные загружены
     в контекст локального шаблона. parent означает, что
     переменные загружены в контекст как локального, так
     и родительского шаблона. global означает, что
     переменные доступны из любого шаблона.
     </entry>
    </row>
    <row>
     <entry>global</entry>
     <entry>boolean</entry>
     <entry>Нет</entry>
     <entry><emphasis>No</emphasis></entry>
     <entry>
      Доступны ли переменные из родительского шаблона.
      Аналогичен scope=parent. ЗАМЕЧАНИЕ: Этот атрибут
      перекрывается атрибутом scope, но все еще
      поддерживается. Если scope указан, то это значение
      игнорируется.
     </entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>
 <example>
  <title>{config_load}</title>
	 <para>
	   Файл <filename>example.conf</filename>.
     </para>
	 <programlisting>
<![CDATA[
#это комментарий конфигурационного файла

# глобальные переменные
pageTitle = "Main Menu"
bodyBgColor = #000000
tableBgColor = #000000
rowBgColor = #00ff00

#секция переменных customer
[Customer]
pageTitle = "Customer Info"
]]>
  </programlisting>
  <para>и шаблон</para>
  <programlisting>
<![CDATA[
{config_load file="example.conf"}

<html>
 <head>
  <title>{#pageTitle#|default:"No title"}</title>
 </head>
 <body bgcolor="{#bodyBgColor#}">
  <table border="{#tableBorderSize#}" bgcolor="{#tableBgColor#}">
	  <tr bgcolor="{#rowBgColor#}">
		  <td>First</td>
		  <td>Last</td>
		  <td>Address</td>
	  </tr>
  </table>
 </body>
</html>
]]>
  </programlisting>
 </example>
	<para>
	 <link linkend="config.files">Конфигурационные файлы</link>
  могут также содержать секции. Вы можете загружать
  переменные из определенной секции, указав атрибут
  <parameter>section</parameter>. Имейте в виду, что глобальные
  конфигурационные переменные всегда загружаются вместе с секционными
  переменными, которые могут переопределять их.
 </para>
 <note>
  <para>
   <emphasis>Секции файлов конфигурации</emphasis> и встроенная
   функция
   <link linkend="language.function.section"><varname>{section}</varname></link>
   не имеют ничего общего, кроме схожего названия.
  </para>
 </note>
 <example>
  <title>функция {config_load} с секцией</title>
  <programlisting>
<![CDATA[
{config_load file='example.conf' section='Customer'}

<html>
 <head>
  <title>{#pageTitle#|default:"No title"}</title>
 </head>
 <body bgcolor="{#bodyBgColor#}">
  <table border="{#tableBorderSize#}" bgcolor="{#tableBgColor#}">
	  <tr bgcolor="{#rowBgColor#}">
		  <td>First</td>
		  <td>Last</td>
		  <td>Address</td>
	  </tr>
  </table>
 </body>
</html>
]]>
  </programlisting>
 </example>

 <para>
  См. <link linkend="variable.config.overwrite"><parameter>$config_overwrite</parameter></link>
  для массивов конфигурационных переменных.
 </para>

 <para>
  См. также <link linkend="config.files">Конфигурационные файлы</link>,
  <link linkend="language.config.variables">Конфигурационные переменные</link>,
  <link linkend="variable.config.dir"><parameter>$config_dir</parameter></link>,
  <link linkend="api.get.config.vars"><varname>get_config_vars()</varname></link>
  и
  <link linkend="api.config.load"><varname>config_load()</varname></link>.
 </para>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

