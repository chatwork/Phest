<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2764 $ -->
<!-- EN-Revision: 2757 Maintainer: freespace Status: ready -->
<sect1 id="language.syntax.quotes">
 <title>Внедренные переменные в двойных кавычках</title>
 
 <itemizedlist>
 <listitem>
 <para>
  Smarty распознает
  <link linkend="api.assign">присвоенные</link>
  <link linkend="language.syntax.variables">переменные</link>,
  если они встречаются в строках, заключенных в "двойные кавычки",
  если имена переменных состоят из цифр, букв, знака под_чёркивания и
  квадратных скобок[].
  См. также <ulink url="&url.php-manual;language.variables">Переменные</ulink>.
 </para>
 </listitem>
 
 <listitem>
 <para>
  В случае, если переменная содержит другие символы, например
  точки, ссылки на объекты и т.д., переменную необходимо заключить
  в <literal>`обратные кавычки`</literal>.
  В данном случае вы не можете использовать
  <link linkend="language.modifiers">модификаторы</link>,
  их следует применять вне кавычек.
 </para>
 </listitem>
 
 <listitem>
  <para>
   Вы не можете использовать
   <link linkend="language.modifiers">модификаторы</link>
   подобным образом - они всегда должны применяться за пределами кавычек.
  </para>
 </listitem>
 </itemizedlist>
 
 <example>
  <title>Примеры синтаксиса</title>
  <programlisting>
<![CDATA[
{func var="test $foo test"}       <-- ищет $foo
{func var="test $foo_bar test"}   <-- ищет $foo_bar
{func var="test $foo[0] test"}    <-- ищет $foo[0]
{func var="test $foo[bar] test"}  <-- ищет $foo[bar]
{func var="test $foo.bar test"}   <-- ищет $foo (не $foo.bar)
{func var="test `$foo.bar` test"} <-- ищет $foo.bar
{func var="test `$foo.bar` test"|escape} <-- модификатор вне кавычек!
]]>
  </programlisting>
 </example>

 <example>
  <title>Практические примеры</title>
  <programlisting>
<![CDATA[
{* заменит $tpl_name её значением *}
{include file="subdir/$tpl_name.tpl"}

{* не заменит $tpl_name *}
{include file='subdir/$tpl_name.tpl'} <--

{* нужны обратные кавычки из за того, что имя содержит точки *}
{cycle values="one,two,`$smarty.config.myval`"}

{*  аналог $module['contact'].'.tpl' в PHP *}
{include file="`$module.contact`.tpl"}

{*  аналог $module[$view].'.tpl' в PHP *}
{include file="`$module.$view`.tpl"}
]]>
  </programlisting>
 </example>

 <para>
  См. также
  <link linkend="language.modifier.escape"><varname>escape</varname></link>.
 </para>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
