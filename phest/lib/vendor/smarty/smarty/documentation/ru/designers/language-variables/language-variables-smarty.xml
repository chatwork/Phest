<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2761 $ -->
<!-- EN-Revision: 0 Maintainer: freespace Status: ready -->
<sect1 id="language.variables.smarty">
 <title>Зарезервированная переменная {$smarty}</title>
 <para>
  Зарезервированная переменная {$smarty} может быть использована для получения
  доступа к нескольким переменным окружения и запроса. Далее следует их полный
  список.
 </para>
 <sect2 id="language.variables.smarty.request">
  <title>Переменные запроса</title>
  <para>
   <ulink url="&url.php-manual;reserved.variables">К переменным запроса</ulink>,
   таким как $_GET, $_POST, $_COOKIE, $_SERVER, $_ENV и $_SESSION
   (см. <link linkend="variable.request.vars.order">$request_vars_order</link>
   и <link
   linkend="variable.request.use.auto.globals">$request_use_auto_globals</link>
   ), можно получить доступ, как показано в следующем примере:
  </para>
  <example>
   <title>Отображение переменных запроса</title>
   <programlisting>
<![CDATA[
{* отображение параметра page из URL ($_GET) http://www.example.com/index.php?page=foo *}
{$smarty.get.page}

{* отображение параметра "page" из формы ($_POST['page']) *}
{$smarty.post.page}

{* отображение значения cookie "username" ($_COOKIE['username']) *}
{$smarty.cookies.username}

{* отображение серверной переменной "SERVER_NAME" ($_SERVER['SERVER_NAME'])*}
{$smarty.server.SERVER_NAME}

{* отображение переменной системного окружения "PATH" *}
{$smarty.env.PATH}

{* отображение переменной сессии PHP "id" ($_SESSION['id']) *}
{$smarty.session.id}

{* отображение переменной "username" из смешенных get/post/cookies/server/env *}
{$smarty.request.username}
]]>
   </programlisting>
  </example>
  <note>
   <para>
    По историческим соображениям, доступ к переменной {$SCRIPT_NAME} можно
    получить непосредственно, хотя предпочтительным способом является обращение
    {$smarty.server.SCRIPT_NAME}.
   </para>
   <programlisting>
<![CDATA[
<a href="{$SCRIPT_NAME}?page=smarty">click me</a>
<a href="{$smarty.server.SCRIPT_NAME}?page=smarty">click me</a>
]]>
   </programlisting>
  </note>
 </sect2>
 <sect2 id="language.variables.smarty.now">
  <title>{$smarty.now}</title>
  <para>
   Текущая <ulink url="&url.php-manual;function.time">временная метка</ulink>
   содержится в переменной {$smarty.now}. Это значение отражает количество
   секунд, которые прошли с момента наступления так называемой Эпохи
   (1 января 1970 года). Её можно прямо передавать модификатору
   <link linkend="language.modifier.date.format">date_format</link>
   для отображения текущей даты/времени. Обратите внимание,
   что time() вызывается при каджом обращении; к примеру, скрипт, работающий
   три секунды и вызывающий $smarty.now в начале и в конце работы, покажет
   разницу в три секунды.
  </para>
  <example>
   <title>Использование {$smarty.now}</title>
   <programlisting>
<![CDATA[
{* использование модификатора date_format для отображения текущей даты/времени*}
{$smarty.now|date_format:"%Y-%m-%d %H:%M:%S"}
]]>
   </programlisting>
  </example>
 </sect2>
 <sect2 id="language.variables.smarty.const">
  <title>{$smarty.const}</title>
  <para>
   Вы можете обращаться к константам PHP напрямую. См. также <link
   linkend="smarty.constants">Константы Smarty</link>
  </para>
  <example>
   <title>Использование {$smarty.const} для доступа к константам</title>
   <programlisting role="php">
<![CDATA[
// константа определена в PHP
define('_MY_CONST_VAL','CHERRIES');
]]>
</programlisting>
<programlisting>
<![CDATA[
{* вывод константы PHP в шаблоне *}
{$smarty.const._MY_CONST_VAL}
]]>
   </programlisting>
  </example>
 </sect2>

 <sect2 id="language.variables.smarty.capture">
  <title>{$smarty.capture}</title>
  <para>
   Результат обработки шаблона, сохраненный конструкцией <link
   linkend="language.function.capture">{capture}..{/capture}</link>,
   доступен при помощи переменной {$smarty.capture}. См. раздел о
   <link linkend="language.function.capture">{capture}</link>
   для получения примера.
  </para>
 </sect2>

 <sect2 id="language.variables.smarty.config">
  <title>{$smarty.config}</title>
  <para>
   Переменная {$smarty} может использоваться для обращения к загруженным <link
   linkend="language.config.variables">конфигурационным переменным</link>.
   {$smarty.config.foo} является синонимом {#foo#}. См. раздел о
   <link linkend="language.function.config.load">{config_load}</link>
   для получения примера.
  </para>
 </sect2>

 <sect2 id="language.variables.smarty.loops">
  <title>{$smarty.section}, {$smarty.foreach}</title>
  <para>
   Переменную {$smarty} можно использовать для обращения к свойствам циклов
   <link linkend="language.function.section">{section}</link> и
   <link linkend="language.function.foreach">{foreach}</link>.
   Это очень полезные значения вроде .first, .index и т.д.
  </para>
 </sect2>

 <sect2 id="language.variables.smarty.template">
  <title>{$smarty.template}</title>
  <para>
   Возвращает имя текущего обрабатываемого шаблона. Этот пример показывает
   container.tpl и включенные в него banner.tpl, оба имеют вызов
   {$smarty.template}
  </para>
  <programlisting>
<![CDATA[
<b>Main container is {$smarty.template}</b>
{include file='banner.tpl}
]]>
  </programlisting>
  <para>
   результат обработки шаблона:
  </para>
<programlisting>
<![CDATA[
<b>Main page if container.tpl</b>
banner.tpl
]]>
  </programlisting>
 </sect2>
 <sect2 id="language.variables.smarty.version">
  <title>{$smarty.version}</title>
  <para>
   Возвращает версию Smarty, с которой был скомпилирован шаблон.
  </para>
  <programlisting>
<![CDATA[
<div id="footer">Powered by Smarty {$smarty.version}</div>
]]>
  </programlisting>  
 </sect2>
 <sect2 id="language.variables.smarty.ldelim">
  <title>{$smarty.ldelim}, {$smarty.rdelim}</title>
  <para>
   Эти переменные используются для отображения левого и правого ограничителей -
   так же, как и <link linkend="language.function.ldelim">{ldelim},{rdelim}</link>.
  </para>
  <para>
   См. также
   <link linkend="language.syntax.variables">Переменные</link>
   и
   <link linkend="language.config.variables">Конфигурационные переменные</link>
  </para>
 </sect2>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
