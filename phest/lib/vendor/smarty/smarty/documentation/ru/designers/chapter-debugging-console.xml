<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2761 $ -->
<!-- EN-Revision: 2602 Maintainer: freespace Status: ready -->
<chapter id="chapter.debugging.console">
 <title>Отладочная консоль</title>
 <para>
  В Smarty включена консоль для отладки. Консоль позволяет узнать все
  <link linkend="language.function.include">включенные</link> шаблоны,
  <link linkend="api.assign">присвоенные</link> переменные и настройки из
  <link linkend="language.config.variables">конфинурационных файлов</link>
  для текущего экземпляра Smarty.
  Шаблон <literal>debug.tpl</literal>, поставляемый вместе со Smarty,
  задает внешний вид консоли.
 </para>
 <para>
  Установите опцию Smarty
  <link linkend="variable.debugging">
  <parameter>$debugging</parameter></link> в true и, если
  необходимо, укажите в
  <link linkend="variable.debug.tpl">
  <parameter>$debug_tpl</parameter></link> путь к шаблону
  <literal>debug.tpl</literal> (по умолчанию это
  <link linkend="constant.smarty.dir"><constant>SMARTY_DIR</constant></link>).
  Когда вы загружаете страницу, должно появиться всплывающие окно Javascript
  и вывести список всех подключенных шаблонов и назначенных переменных
  для данной страницы.
 </para>
 <para>
  Для вывода доступных переменных из конкретного шаблона,
  см. функцию <link linkend="language.function.debug">
  <varname>{debug}</varname></link>.
  Для отключения консоли отладки, установите параметр
  <link linkend="variable.debugging">
  <parameter>$debugging</parameter></link> в false.
  Можно также опционально включить консоль отладки, добавив
  <literal>SMARTY_DEBUG</literal> в URL, предварительно включив параметр
  <link linkend="variable.debugging.ctrl">
  <parameter>$debugging_ctrl</parameter></link>.
 </para>
<note>
 <title>Техническое Примечание</title>
 <para>
  Консоль отладки не работает, когда используется функция API
  <link linkend="api.fetch"><varname>fetch()</varname></link>.
  Необходимо использовать только функцию
  <link linkend="api.display"><varname>display()</varname></link>.
  Она генерирует javascript код вначале каждой сгенерированной страницы.
  Если вам не нравится javascript, можно отредатировать
  <literal>debug.tpl</literal> для
  изменения способа отображения по вашему вкусу.
  Отладочная информация не кэшируется и в отладочную информацию не
  включается информация о <literal>debug.tpl</literal>.
 </para>
</note>
<note>
 <para>
  Время загрузки каждого шаблона и файла конфигурации выводятся в секундах или
  в миллисекундах.
 </para>
</note>
<para>
 См. также
 <link linkend="troubleshooting">Решение проблем</link>,
 <link linkend="variable.error.reporting">
 <parameter>$error_reporting</parameter></link>
 и
 <link linkend="api.trigger.error">
 <varname>trigger_error()</varname></link>.
</para>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
