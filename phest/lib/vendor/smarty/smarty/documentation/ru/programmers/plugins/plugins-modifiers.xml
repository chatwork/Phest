<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2761 $ -->
<!-- EN-Revision: 0 Maintainer: tony2001 Status: ready -->
<sect1 id="plugins.modifiers">
 <title>Модификаторы</title>
 <para>
  Модификаторы - это маленькие функции, которые воздействуют на переменные в
  шаблоне перед тем, как те будут выведены на экран или использованы в ином контексте.
  Для каждой переменной шаблона, одновременно могут быть использованы несколько модификаторов.
 </para>
 <funcsynopsis>
  <funcprototype>
   <funcdef>mixed <function>smarty_modifier_<replaceable>name</replaceable></function></funcdef>
   <paramdef>mixed <parameter>$value</parameter></paramdef>
   <paramdef>[mixed <parameter>$param1</parameter>, ...]</paramdef>
  </funcprototype>
 </funcsynopsis>
 <para>
  Первый параметр плагина-модификатора это значение в отношении которого
  модификатор будет применен. Остальные параметры могут быть
  произвольными, в зависимости от операций, которые они осуществляют.
 </para>
 <para>
  Модификатор должен возвращать результат, полученный в процессе своего выполнения.
 </para>
 <para>
  Смотрите также:
  <link linkend="api.register.modifier">register_modifier()</link>,
  <link linkend="api.unregister.modifier">unregister_modifier()</link>.
 </para>
 <example>
  <title>Простой плагин-модификатор</title>
  <para>
   Этот плагин в своей основе является аналогом одной из PHP-функций. Он
   не имеет никаких дополнительных параметров.
  </para>
  <programlisting role="php">
<![CDATA[
<?php
/*
 * Smarty plugin
 * -------------------------------------------------------------
 * Файл:     modifier.capitalize.php
 * Тип:     modifier
 * Имя:     capitalize
 * Назначение:  Сделать первую букву каждого слова в
 * строке прописной
 * -------------------------------------------------------------
 */
function smarty_modifier_capitalize($string)
{
    return ucwords($string);
}
?>
]]>
  </programlisting>
 </example>
 <example>
  <title>Более сложный модификатор</title>
  <programlisting role="php">
  <![CDATA[
<?php
/*
 * Smarty plugin
 * -------------------------------------------------------------
 * Файл:     modifier.truncate.php
 * Тип:     modifier
 * Имя:     truncate
 * Назначение:  Урезать строку до определенной длины,
 *           при необходимости обрезать слово на половине и присоеденить строку $etc.
 * -------------------------------------------------------------
 */
function smarty_modifier_truncate($string, $length = 80, $etc = '...',
                                  $break_words = false)
{
    if ($length == 0)
        return '';

    if (strlen($string) > $length) {
        $length -= strlen($etc);
        $fragment = substr($string, 0, $length+1);
        if ($break_words)
            $fragment = substr($fragment, 0, -1);
        else
            $fragment = preg_replace('/\s+(\S+)?$/', '', $fragment);
        return $fragment.$etc;
    } else
        return $string;
}
?>
]]>
  </programlisting>
 </example>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
