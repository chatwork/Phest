<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
<chapter id="language.modifiers">
 <title>Modificatori delle variabili</title>
 <para>
  I modificatori delle variabili si possono applicare alle variabili, alle
  funzioni utente o a stringhe. Per applicare un modificatore bisogna indicare
  il valore seguito da <literal>|</literal> (pipe) e dal nome del modificatore.
  Un modificatore può accettare parametri addizionali che modificano il suo
  comportamento. Questi parametri seguono il nome del modificatore e sono
  separati da <literal>:</literal> (due punti).
 </para>
 <example>
  <title>esempio di modificatore</title>
  <programlisting>
<![CDATA[
{* Mettere il titolo in maiuscolo *}
<h2>{$title|upper}</h2>

{* Troncare il topic a 40 caratteri usando ... alla fine *}
Topic: {$topic|truncate:40:"..."}

{* Formattare una stringa indicata direttamente *}
{"now"|date_format:"%Y/%m/%d"}

{* Applicare un modificatore ad una funzione utente *}
{mailto|upper address="me@domain.dom"}
]]>
  </programlisting>
 </example>
 <para>
  Se applicate un modificatore ad un array invece che ad un singolo valore,
  il modificatore verrà applicato ad ogni valore dell'array. Se volete che
  il modificatore lavori sull'intero array considerandolo un valore unico,
  dovete premettere al nome del modificatore un simbolo <literal>@</literal>,
  così: <literal>{$articleTitle|@count}</literal> (questo stampa il numero
  di elementi nell'array $articleTitle).
 </para>
 <para>
  I modificatori possono essere autocaricati dalla <link
  linkend="variable.plugins.dir">$plugins_dir</link> (vedere <link 
  linkend="plugins.naming.conventions">Convenzioni di nomenclatura</link>)
  oppure possono essere registrati esplicitamente (vedere <link
  linkend="api.register.modifier">register_modifier</link>). Inoltre tutte
  le funzioni php possono essere usate implicitamente come modificatori.
  (L'esempio <literal>@count</literal> visto sopra usa in realtà la funzione
  php count e non un modificatore di Smarty). L'uso delle funzioni php
  come modificatori porta con sé due piccoli trabocchetti: Primo: A volte
  l'ordine dei parametri delle funzioni non è quello desiderato 
  (<literal>{"%2.f"|sprintf:$float}</literal> funziona, ma non è molto
  intuitivo. Più facile è <literal>{$float|string_format:"%2.f"}</literal>,
  che è fornito da Smarty). Secondo: con <link linkend="variable.security">$security</link>
  attivato, tutte le funzioni php che si vogliono usare come modificatori
  devono essere dichiarate affidabili nell'array <link linkend="variable.security.settings">
  $security_settings['MODIFIER_FUNCS']</link>.
 </para>

 &designers.language-modifiers.language-modifier-capitalize;
 &designers.language-modifiers.language-modifier-count-characters;
 &designers.language-modifiers.language-modifier-cat;
 &designers.language-modifiers.language-modifier-count-paragraphs;
 &designers.language-modifiers.language-modifier-count-sentences;
 &designers.language-modifiers.language-modifier-count-words;
 &designers.language-modifiers.language-modifier-date-format;
 &designers.language-modifiers.language-modifier-default;
 &designers.language-modifiers.language-modifier-escape;
 &designers.language-modifiers.language-modifier-indent;
 &designers.language-modifiers.language-modifier-lower;
 &designers.language-modifiers.language-modifier-nl2br;
 &designers.language-modifiers.language-modifier-regex-replace;
 &designers.language-modifiers.language-modifier-replace;
 &designers.language-modifiers.language-modifier-spacify;
 &designers.language-modifiers.language-modifier-string-format;
 &designers.language-modifiers.language-modifier-strip;
 &designers.language-modifiers.language-modifier-strip-tags;
 &designers.language-modifiers.language-modifier-truncate;
 &designers.language-modifiers.language-modifier-upper;
 &designers.language-modifiers.language-modifier-wordwrap;
  
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
