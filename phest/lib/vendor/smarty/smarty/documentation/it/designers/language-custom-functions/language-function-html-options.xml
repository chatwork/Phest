<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
<sect1 id="language.function.html.options">
	<title>html_options</title>
 <informaltable frame="all">
  <tgroup cols="5">
    <colspec colname="param" align="center" />
    <colspec colname="type" align="center" />
    <colspec colname="required" align="center" />
    <colspec colname="default" align="center" />
    <colspec colname="desc" />
    <thead>
    <row>
     <entry>Nome Attributo</entry>
     <entry>Tipo</entry>
     <entry>Obbligatorio</entry>
     <entry>Default</entry>
     <entry>Descrizione</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>values</entry>
     <entry>array</entry>
     <entry>sì, a meno che si usi l'attributo options</entry>
     <entry><emphasis>nessuno</emphasis></entry>
     <entry>array di valori per il menù a discesa</entry>
    </row>
    <row>
     <entry>output</entry>
     <entry>array</entry>
     <entry>sì, a meno che si usi l'attributo options</entry>
     <entry><emphasis>nessuno</emphasis></entry>
     <entry>array di output per il menù a discesa</entry>
    </row>
    <row>
     <entry>selected</entry>
     <entry>stringa/array</entry>
     <entry>no</entry>
     <entry><emphasis>vuoto</emphasis></entry>
     <entry>l'elemento/gli elementi selezionato/i</entry>
    </row>
    <row>
     <entry>options</entry>
     <entry>array associativo</entry>
     <entry>sì, a meno che si usino values e output</entry>
     <entry><emphasis>nessuno</emphasis></entry>
     <entry>array associativo di valori e output</entry>
    </row>
    <row>
     <entry>name</entry>
     <entry>stringa</entry>
     <entry>no</entry>
     <entry><emphasis>vuoto</emphasis></entry>
     <entry>nome del gruppo select</entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>
			<para>
			html_options è una funzione utente che usa i dati forniti per creare
                        un gruppo di opzioni, cioè di valori option per un menù a discesa
                        (casella select). Si occupa anche di quale o quali valori devono
                        essere preselezionati. Gli attributi obbligatori sono values e output,
                        a meno che non usiate invece options.
			</para>
			<para>
			Se uno dei valori forniti è un array, verrà trattato come un gruppo
			di opzioni (OPTGROUP), e visualizzato di conseguenza. E' possibile
			creare gruppi ricorsivi (a più livelli). Tutto l'output generato è
			compatibile XHTML.
			</para>
			<para>
			Se viene fornito l'attributo opzionale <emphasis>name</emphasis>,
			la lista di opzioni verrà racchiusa con il tag
			&lt;select name="groupname"&gt;&lt;/select&gt;. In caso contrario
                        verrà generata solo la lista di opzioni.
			</para>
			<para>
			Tutti i parametri non compresi nella lista qui sopra verranno
			stampati come coppie nome/valore nel tag &lt;select&gt;.
			Saranno ignorati se l'attributo <emphasis>name</emphasis> non è
			presente.
			</para>
<example>
<title>html_options</title>
<programlisting>
index.php:

require('Smarty.class.php');
$smarty = new Smarty;
$smarty-&gt;assign('cust_ids', array(1000,1001,1002,1003));
$smarty-&gt;assign('cust_names', array('Joe Schmoe','Jack Smith','Jane
Johnson','Carlie Brown'));
$smarty-&gt;assign('customer_id', 1001);
$smarty-&gt;display('index.tpl');

index.tpl:

&lt;select name=customer_id&gt;
	{html_options values=$cust_ids selected=$customer_id output=$cust_names}
&lt;/select&gt;


index.php:

require('Smarty.class.php');
$smarty = new Smarty;
$smarty-&gt;assign('cust_options', array(
			1001 =&gt; 'Joe Schmoe',
			1002 =&gt; 'Jack Smith',
			1003 =&gt; 'Jane Johnson',
			1004 =&gt; 'Charlie Brown'));
$smarty-&gt;assign('customer_id', 1001);
$smarty-&gt;display('index.tpl');

index.tpl:

&lt;select name=customer_id&gt;
	{html_options options=$cust_options selected=$customer_id}
&lt;/select&gt;


OUTPUT: (per entrambi gli esempi)

&lt;select name=customer_id&gt;
	&lt;option value="1000"&gt;Joe Schmoe&lt;/option&gt;
	&lt;option value="1001" selected="selected"&gt;Jack Smith&lt;/option&gt;
	&lt;option value="1002"&gt;Jane Johnson&lt;/option&gt;
	&lt;option value="1003"&gt;Charlie Brown&lt;/option&gt;
&lt;/select&gt;</programlisting>
</example>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
