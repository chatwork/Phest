<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
     <sect1 id="variable.compile.id">
      <title>$compile_id</title>
      <para>
      Identificador de compilación persistente. Como una alternativa
      para pasar el mismo compile_id a cada llamada de función, usted 
      puede asignar este compile_id y este será usado implicitamente 
      después.
      </para>
 <para>
  Con el compile_id usted puede trabajar con limitacion porque usted 
  no puede usar el mismo 
  <link linkend="variable.compile.dir">$compile_dir</link>
  para diferentes 
  <link linkend="variable.template.dir">$template_dirs</link>.  
  Si usted asigna distintos compile_id para cada template_dir entonces 
  Smarty puede hacer la compilacion de los templates  por cada compile_id. 
 </para>
 <para>
  Si usted tiene por ejemplo un 
  <link linkend="plugins.prefilters.postfilters">prefilter</link>
  este localiza su template (es decir: traduce al lenguaje las dependencias por partes)
  y lo compila, entonces usted debe usar el lenguaje actual como $compile_id
  y usted obtendrá un conjunto de plantillas compiladas para cada idioma que usted utilice. 
 </para>
 <para>
  otro ejemplo puede ser si usa el mismo directorio para compilar 
  multiples dominios / multiples host virtuales.
 </para>
 <example>
  <title>$compile_id</title>
  <programlisting role="php">
<![CDATA[
<?php

$smarty->compile_id = $_SERVER['SERVER_NAME'];
$smarty->compile_dir = 'path/to/shared_compile_dir';

?>
]]>
  </programlisting>
 </example>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
