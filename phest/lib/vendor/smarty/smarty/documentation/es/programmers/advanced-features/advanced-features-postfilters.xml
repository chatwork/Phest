<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
   <sect1 id="advanced.features.postfilters">
    <title>Postfilters</title>
    <para>
     Los postfilters de template son funciones de PHP con las cuales sus 
     templates son corridos inmediatamente después de ser compilados. 
     Los postfilters pueden ser <link linkend="api.register.postfilter">
     registrado</link> o cargados del directorio de plugins usando la función 
     <link linkend="api.load.filter">load_filter()</link> o por la variable
     de configuración 
     <link linkend="variable.autoload.filters">$autoload_filters</link>.
     El Smarty pasara el código fuente del template
     compilado como el primer argumento, y espera que la función retorne el
     resultado del procesamiento.
    </para>
    <example>
     <title>Usando un postfilter de template</title>
     <programlisting role="php">
<![CDATA[
<?php
// ponga esto en su aplicaci&oacute;n
function add_header_comment($tpl_source, &$smarty)
{
    return "<?php echo \"<!-- Created by Smarty! -->;\n\" ?>;\n".$tpl_source;
}

// registra el postfilter
$smarty->register_postfilter("add_header_comment");
$smarty->display("index.tpl");
?>
]]>
</programlisting>
  <para>
   Observe como hacer la compilacion para Smarty del template index.tpl:
  </para>
    <screen>
     <![CDATA[
     <!-- Created by Smarty! -->
     {* rest of template content... *}
     ]]>
       </screen>
    </example>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
