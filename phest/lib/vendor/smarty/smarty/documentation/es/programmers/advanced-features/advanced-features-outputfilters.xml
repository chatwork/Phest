<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
  <sect1 id="advanced.features.outputfilters">
   <title>Filtros de salida</title>
   <para>
    Cuando el template es invocado a través de display() o fetch(), 
    su salida puede ser enviada a través de uno o mas filtros de salida.
    Este es diferente a los postfilters porque los postfilters operan en
    los templates compilados antes de ser salvados en disco, y los filtros 
    de salida operan en la salida del template cuando este es ejecutado.
   </para>

   <para>
    Los Filtros de Salida pueden ser 
    <link linkend="api.register.outputfilter">registrado</link> o
    cargados del directorio de plugins usando la función
    <link linkend="api.load.filter">load_filter()</link> o 
    configurando a variable
    <link linkend="variable.autoload.filters">$autoload_filters</link>.
    El Smarty pasara la salida como el primer argumento, y espera
    que la función retorne el resultado del procesamiento.
   </para>
   <example>
    <title>Usando un filtro de salida de template</title>
    <programlisting role="php">
<![CDATA[
<?php
// ponga esto en su aplicación
function protect_email($tpl_output, &$smarty)
{
    $tpl_output =
       preg_replace('!(\S+)@([a-zA-Z0-9\.\-]+\.([a-zA-Z]{2,3}|[0-9]{1,3}))!',
                    '$1%40$2', $tpl_output);
    return $tpl_output;
}

// registra el outputfilter
$smarty->register_outputfilter("protect_email");
$smarty->display("index.tpl");

// Ahora cualquier ocurrencia de una direcci&oacute;n de email en la salida
// del template tendra una simple protecci&oacute;n contra spambots
?>
]]>
</programlisting>
   </example>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
