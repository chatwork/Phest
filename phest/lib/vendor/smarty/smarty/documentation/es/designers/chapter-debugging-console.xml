<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
<chapter id="chapter.debugging.console">
 <title>Debugging Console</title>
 <para>
  Incluso en Smarty existe una consola para debug. La consola informa 
  a usted de todos los templates incluidos, las variables definidas y 
  las variables de archivos de configuración de la llamada actual del 
  template. Incluso un template llamado "debug.tpl" viene con la 
  distribución de Smarty el cual controla el formateo de la consola.
  Defina <link linkend="variable.debugging">$debugging</link> en true en 
  el Smarty, y si es necesario defina 
  <link linkend="variable.debug.tpl">$debug_tpl</link> para la ruta 
  del recurso debug.tpl (Esto es SMARTY_DIR por
  default). Cuando usted carga una pagina, una consola en javascript 
  abrira una ventana popup y dara a usted el nombre de todos los templates 
  incluidos y las variables definidas en la pagina actual. Para ver las 
  variables disponibles para un template en particular, vea la función
  <link linkend="language.function.debug">{debug}</link>. Para desabilitar 
  la consola del debug, defina $debugging en false. Usted puede activar
  temporalmente la consola del debug colocando SMARTY_DEBUG en la URL si
  usted activo esta opción con 
  <link linkend="variable.debugging.ctrl">$debugging_ctrl</link>.
 </para>
 <note>
  <title>Nota Técnica</title>
  <para>
   La consola de debug no funciona cuando usted usa la API <link
   linkend="api.fetch">fetch()</link>, solo cuando estuviera usando  
   <link linkend="api.display">display()</link>. 
   Es un conjunto de comandos javascript 
   adicionados al final del template generado. Si a usted no le gusta el 
   javascript, usted puede editar el template debug.tpl para formatear la 
   salida como usted quiera. Los datos del debug no son guardados en cache 
   y los datos del debug.tpl no son incluidos en la consola debug.
  </para>
 </note>
 <note>
  <para>
   Los tiempos de carga de cada template y de archivos de configuración
   son en segundos, o en fracciones de segundo.
  </para>
 </note>
    <para>
    Vea también 
    <link linkend="troubleshooting">troubleshooting</link>,
    <link linkend="variable.error.reporting">$error_reporting</link>
    y <link linkend="api.trigger.error">trigger_error()</link>.
   </para>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
