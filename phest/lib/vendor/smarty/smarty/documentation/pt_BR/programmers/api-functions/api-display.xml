<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: ready -->		
<sect1 id="api.display">
			<title>display</title>
   <methodsynopsis>
   <type>void</type><methodname>display</methodname>
    <methodparam><type>string</type><parameter>template</parameter></methodparam>
    <methodparam choice="opt"><type>string</type><parameter>cache_id</parameter></methodparam>
    <methodparam choice="opt"><type>string</type><parameter>compile_id</parameter></methodparam>
   </methodsynopsis>
			<para>
                Isso mostra o template. Fornecendo um válido <link
                linkend="template.resources">template resource</link>
                tipo e path. Como um segundo parâmetro opcional, você pode passar
		um cache id. Veja o <link linkend="caching">caching
                section</link> para maiores informações.
			</para>
			<para>
				Como um terceiro parâmetro opcional, você pode passar um compile id.
				Isso está no evento que você quer compilar diferentes versões do
				mesmo template, como ter templates compilados separadamente para diferentes linguagens.
				Outro uso para compile_id é quando você usa mais do que um $template_dir
				mas somente um $compile_dir. Seta um compile_id em separado para cada $template_dir,
				de outra maneira templates com mesmo nome irão sobrescrever-se um ao outro.
				Você pode também setar a variável <link
				linkend="variable.compile.id">$compile_id</link> ao invés de 
				passar isso para cada chamada
				de display().
			</para>	
<example>
<title>display</title>
<programlisting>
include("Smarty.class.php");
$smarty = new Smarty;
$smarty->caching = true;

// only do db calls if cache doesn't exist
if(!$smarty->is_cached("index.tpl"))
{

    // dummy up some data
    $address = "245 N 50th";
    $db_data = array(
	    "City" => "Lincoln",
	    "State" => "Nebraska",
	    "Zip" = > "68502"
	    );

    $smarty->assign("Name","Fred");
    $smarty->assign("Address",$address);
    $smarty->assign($db_data);

}

// display the output
$smarty->display("index.tpl");</programlisting>
</example>
			<para>
			Use a sintaxe para <link
			linkend="template.resources">template resources</link> para
			mostrar arquivos fora do  $template_dir directory.
			</para>
<example>
<title>Exemplos de recursos da função display</title>
<programlisting>
// absolute filepath
$smarty->display("/usr/local/include/templates/header.tpl");

// absolute filepath (same thing)
$smarty->display("file:/usr/local/include/templates/header.tpl");

// windows absolute filepath (MUST use "file:" prefix)
$smarty->display("file:C:/www/pub/templates/header.tpl");

// include from template resource named "db"
$smarty->display("db:header.tpl");</programlisting>
</example>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->