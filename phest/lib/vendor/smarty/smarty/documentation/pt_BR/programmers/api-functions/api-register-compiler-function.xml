<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: ready -->		
<sect1 id="api.register.compiler.function">
			<title>register_compiler_function</title>
			<funcsynopsis>
			<funcprototype>
			<funcdef>void <function>register_compiler_function</function></funcdef>
				<paramdef>string <parameter>name</parameter></paramdef>
				<paramdef>mixed <parameter>impl</parameter></paramdef>
				<paramdef>bool <parameter>cacheable</parameter></paramdef>
			</funcprototype>
			</funcsynopsis>
			<para>
                Use isso para registrar dinamicamente uma função de plugin compilador.
		Passe no nome da função compilador, seguido pela função 
		PHP que implemente isso.
			</para>
			<para>
                A chamada para função-php <parameter>impl</parameter> 
		pode ser uma string contendo o nome da função ou (b) um array
		no formato <literal>array(&amp;$object, $method)</literal> com
		<literal>&amp;$object</literal> sendo uma referência para um
		objeto e <literal>$method</literal> sendo uma string
		contendo o nome do método ou (c) um array no formato
		<literal>array(&amp;$class, $method)</literal> com
		<literal>$class</literal> sendo um nome de classe e 
		<literal>$method</literal> sendo o método
		desta classe.
			</para>
			<para>
                <parameter>$cacheable</parameter> pode ser omitido na maioria
                dos casos. Veja <link linkend="caching.cacheable">Controlando modos de Saída de Cache dos Plugins</link> 
		para obter informações apropriadas.
			</para>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->