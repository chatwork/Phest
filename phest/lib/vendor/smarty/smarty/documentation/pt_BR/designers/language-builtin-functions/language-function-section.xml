<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
<!-- EN-Revision: 1.2 Maintainer: thomasgm Status: ready -->
		<sect1 id="language.function.section">
			<title>section,sectionelse</title>
            <informaltable frame="all">
                <tgroup cols="5">
                <colspec colname="param" align="center" />
                <colspec colname="type" align="center" />
                <colspec colname="required" align="center" />
                <colspec colname="default" align="center" />
                <colspec colname="desc" />
                <thead>
                    <row>
                        <entry>Nome do atributo</entry>
                        <entry>Tipo</entry>
                        <entry>Obrigatório</entry>       
                        <entry>Padrão</entry>
                        <entry>Descrição</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>name</entry>
                        <entry>string</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/d</emphasis></entry>
                        <entry>O nome da seção</entry>
                    </row>
                    <row>
                        <entry>loop</entry>
                        <entry>[$variable_name]</entry>
                        <entry>Sim</entry>
                        <entry><emphasis>n/d</emphasis></entry>
                        <entry>O nome da variável para determinar o
                        número de interações</entry>
                    </row>
                    <row>
                        <entry>start</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
						<entry><emphasis>0</emphasis></entry> <entry>A posição
						do índice que a seção vai começar.  Se o valor 
						é negativo, a posição de inicio é calculada a partir 
						do final da matriz. Por exemplo, se houverem
						sete valores na matriz e 'start' for -2, o
						índice inicial é 5. Valores inválidos (valores fora do
						tamanho da matriz) são automaticamente corrigidos 
						para o valor válido mais próximo.</entry>
                    </row>
                    <row>
                        <entry>step</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry><emphasis>1</emphasis></entry>
						<entry>O valor do passo que será usado para percorrer 
						a matriz. Por exemplo, step=2 irá percorrer 
						os índices 0,2,4, etc. Se step for negativo, ele irá caminhar
						pela matriz de trás para frente.</entry>
                    </row>
                    <row>
                        <entry>max</entry>
                        <entry>integer</entry>
                        <entry>Não</entry>
                        <entry><emphasis>1</emphasis></entry>
						<entry>Define o número máximo de loops
						para a section.</entry>
                    </row>
                    <row>
                        <entry>show</entry>
                        <entry>boolean</entry>
                        <entry>Não</entry>
                        <entry><emphasis>true</emphasis></entry>
                        <entry>Determina quando mostrar ou não esta section</entry>
                    </row>
                </tbody>
                </tgroup>
            </informaltable>
			<para>
			 Os 'sections' de template são usados para percorrer os dados de uma matriz. 
			 Todas as tags <emphasis>section</emphasis> devem ser finalizadas com <emphasis>/section</emphasis>. 
			 Os parâmetros obrigatórios são <emphasis>name</emphasis> e <emphasis>loop</emphasis>. 
			 O nome da 'section' pode ser o que você quiser, contendo letras, números e sublinhados. 
			 As 'sections' podem ser aninhadas, e os nomes das sections devem ser únicos. A variável 
			 'loop' (normalmente uma matriz de valores) determina o número de vezes que a section 
			 será percorrida. Quando estiver exibindo uma variável dentro de uma section, 
			 o nome da section deve estar ao lado da variável dentro de conchetes []. 
			 <emphasis>sectionelse</emphasis> é executado quando não houver valores na 
			 variável 'loop'.
			</para>
<example>
<title>section</title>
<programlisting>
<![CDATA[
{* este exemplo irá mostrar todos os valores da matriz $custid *}
{section name=consumidor loop=$custid}
	id: {$custid[consumidor]}<br>
{/section}
]]>
</programlisting>
<para>MOSTRA:</para>
<programlisting>
<![CDATA[
id: 1000<br>
id: 1001<br>
id: 1002<br>
]]>
</programlisting>
</example>

<example>
<title>loop de variável section</title>
<programlisting>
<![CDATA[
{* a variável 'loop' somente determina o número de vezes que irá percorrer a matriz. 
   Você pode acessar qualquer variável do template dentro da section. 
   Este exemplo assume que $custid, $nome e $endereco são todas 
   matrizes contendo o mesmo número de valores *}

{section name=consumidor loop=$custid}
	id: {$custid[consumidor]}<br>
	nome: {$nome[consumidor]}<br>
	endereço: {$endereco[customer]}<br>
	<p>
{/section}
]]>
</programlisting>
<para>MOSTRA:</para>
<programlisting>
<![CDATA[
id: 1000<br>
nome: John Smith<br>
endereço: 253 N 45th<br>
<p>
id: 1001<br>
nome: Jack Jones<br>
endereço: 417 Mulberry ln<br>
<p>
id: 1002<br>
nome: Jane Munson<br>
endereço: 5605 apple st<br>
<p>
]]>
</programlisting>
</example>

<example>
<title>Nomes de section</title>
<programlisting>
<![CDATA[
{* o nome da seção pode ser o que você qusier, 
   e é usado para referenciar os dados contido na seção *}

{section name=meusdados loop=$custid}
	id: {$custid[meusdados]}<br>
	nome: {$nome[meusdados]}<br>
	endereço: {$endereco[meusdados]}<br>
	<p>
{/section}
]]>
</programlisting>
</example>

<example>
<title>sections aninhadas</title>
<programlisting>
<![CDATA[
{* sections podem ser aninhadas até o nível que você quiser. Com sections aninhadas, 
   você pode acessar complexas estruturas de dados, tais como matrizes multi-dimensionais. 
   Neste exemplo, $contact_type[customer] é uma matriz contendo os tipos de contatos 
   do consumidor atualmente selecionado. *}

{section name=customer loop=$custid}
	id: {$custid[customer]}<br>
	name: {$name[customer]}<br>
	address: {$address[customer]}<br>
	{section name=contact loop=$contact_type[customer]}
		{$contact_type[customer][contact]}: {$contact_info[customer][contact]}<br>
	{/section}
	<p>
{/section}
]]>
</programlisting>
<para>MOSTRA:</para>
<programlisting>
<![CDATA[
id: 1000<br>
name: John Smith<br>
address: 253 N 45th<br>
home phone: 555-555-5555<br>
cell phone: 555-555-5555<br>
e-mail: john@mydomain.com<br>
<p>
id: 1001<br>
name: Jack Jones<br>
address: 417 Mulberry ln<br>
home phone: 555-555-5555<br>
cell phone: 555-555-5555<br>
e-mail: jack@mydomain.com<br>
<p>
id: 1002<br>
name: Jane Munson<br>
address: 5605 apple st<br>
home phone: 555-555-5555<br>
cell phone: 555-555-5555<br>
e-mail: jane@mydomain.com<br>
<p>
]]>
</programlisting>
</example>

<example>
<title>sections e matrizes associativas</title>
<programlisting>
<![CDATA[
{* Este é um exemplo de exibição de uma matriz associativa 
   dentro de uma seção *}

{section name=consumidor loop=$contatos}
	nome: {$contatos[consumidor].nome}<br>
	telefone: {$contatos[consumidor].telefone}<br>
	celular: {$contatos[consumidor].celular}<br>
	e-mail: {$contatos[consumidor].email}<p>
{/section}
]]>
</programlisting>
<para>MOSTRA:</para>
<programlisting>
<![CDATA[
name: John Smith<br>
home: 555-555-5555<br>
cell: 555-555-5555<br>
e-mail: john@mydomain.com<p>
name: Jack Jones<br>
home phone: 555-555-5555<br>
cell phone: 555-555-5555<br>
e-mail: jack@mydomain.com<p>
name: Jane Munson<br>
home phone: 555-555-5555<br>
cell phone: 555-555-5555<br>
e-mail: jane@mydomain.com<p>
]]>
</programlisting>
</example>



<example>
<title>sectionelse</title>
<programlisting>
<![CDATA[
{* sectionelse irá executar se não houverem mais valores em $custid *}

{section name=consumidor loop=$custid}
	id: {$custid[consumidor]}<br>
{sectionelse}
	não há valores em $custid.
{/section}
]]>
</programlisting>
</example>
		<para>
		 Sections também tem as suas próprias variáveis que manipulam as propriedades da section.
		 Estas são indicadas assim: {$smarty.section.nomesection.nomevariavel}
		</para>
        <note>
         <title>Nota</title>
          <para>
		   A partir do Smarty 1.5.0, a sintaxe para as variáveis de propriedades da section 
		   mudou de {%nomesecao.nomevariavel%} para {$smarty.section.nomesection.nomevariavel}. A 
		   sintaxe antiga ainda é suportada, mas você verá referências somente à nova sintaxe no 
		   manual.
          </para>
        </note>
			<sect2 id="section.property.index">	
			<title>index</title>
			<para>
			index é usado para mostrar o índice atual do loop, começando em zero
			(ou pelo atributo start caso tenha sido definido), e incrementado por um 
			(ou pelo atributo step caso tenha sido definido).
			</para>
			<note>
				<title>Nota Técnica:</title>
				<para>
                 Se as propriedades 'start' e 'step' da section não foram modificadas, 
				 elas irão funcionar da mesma maneira que a propriedade 'interation' da 
				 section funcionam, exceto que ela começa do 0 ao invés de 1.
				</para>
			</note>
	<example>
	<title>propriedade index da section</title>
	<programlisting>
<![CDATA[
{section name=consumidor loop=$custid}
	{$smarty.section.consumidor.index} id: {$custid[consumidor]}<br>
{/section}
]]>
</programlisting>
<para>MOSTRA:</para>
<programlisting>
<![CDATA[
0 id: 1000<br>
1 id: 1001<br>
2 id: 1002<br>
]]>
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.index.prev">	
			<title>index_prev</title>
			<para>
			index_prev é usado para mostrar o índice anterior do loop.
        	No primeiro loop, o valor dele é -1.
			</para>
	<example>
	<title>propriedade index_prev da section</title>
	<programlisting>
<![CDATA[
{section name=consumidor loop=$custid}
	{$smarty.section.consumidor.index} id: {$custid[consumidor]}<br>
	{* Para sua informação, $custid[consumidor.index] e $custid[consumidor] tem o mesmo significado *}
	{if $custid[consumidor.index_prev] ne $custid[consumidor.index]}
		O id do consumidor irá mudar<br>
	{/if}
{/section}
]]>
</programlisting>
<para>MOSTRA:</para>
<programlisting>
<![CDATA[
0 id: 1000<br>
   	O id do consumidor irá mudar<br>
1 id: 1001<br>
   	O id do consumidor irá mudar<br>
2 id: 1002<br>
   	O id do consumidor irá mudar<br>
]]>
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.index.next">
			<title>index_next</title>
			<para>
        	 index_next é usado para mostrar o próximo indice do loop. No último loop,
        	 isto ainda é um mais o índice atual( respeitando a definição
        	 do atributo step, caso tenha sido definido.)
			</para>
	<example>
	<title>propriedade index_next section</title>
	<programlisting>
<![CDATA[
{section name=consumidor loop=$custid}
	{$smarty.section.consumidor.index} id: {$custid[consumidor]}<br>
	{* Para sua informação, $custid[consumidor.index] e $custid[consumidor] tem o mesmo significado *}
	{if $custid[consumidor.index_next] ne $custid[consumidor.index]}
    	O id do consumidor irá mudar<br>
	{/if}
{/section}
]]>
</programlisting>
<para>MOSTRA:</para>
<programlisting>
<![CDATA[
0 id: 1000<br>
   	O id do consumidor irá mudar<br>
1 id: 1001<br>
   	O id do consumidor irá mudar<br>
2 id: 1002<br>
   	O id do consumidor irá mudar<br>
]]>
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.iteration">
			<title>iteration</title>
			<para>
        	iteration é usado para mostrar a interação atual do loop.
			</para>
			<note>
			 <title>Nota:</title>
			  <para>
			   'interation' não é afetado pelas propriedades start, step e max da section, 
			   diferentemente da propriedade index. Interation diferente de 'index' começa 
			   com 1 ao invés de 0. 'rownum' é um sinônimo de 'interation', eles exercem a 
			   mesma função.
			  </para>
			 </note>
	<example>
	<title>propriedade interation da section</title>
	<programlisting>
<![CDATA[
{section name=consumidor loop=$custid start=5 step=2}
	interação atual do loop: {$smarty.section.consumidor.iteration}<br>
	{$smarty.section.consumidor.index} id: {$custid[consumidor]}<br>
	{* Para sua informação, $custid[consumidor.index] e $custid[consumidor] tem o mesmo significado *}
	{if $custid[consumidor.index_next] ne $custid[consumidor.index]}
    	O id do consumidor irá mudar<br>
	{/if}
{/section}
]]>
</programlisting>
<para>MOSTRA:</para>
<programlisting>
<![CDATA[
interação atual do loop: 1
5 id: 1000<br>
   	O id do consumidor irá mudar<br>
interação atual do loop: 2
7 id: 1001<br>
   	O id do consumidor irá mudar<br>
interação atual do loop: 3
9 id: 1002<br>
   	O id do consumidor irá mudar<br>
]]>
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.first">
			<title>first</title>
			<para>
        	 first é definido como true se a interação atual da section
        	 é a primeira.
			</para>
	<example>
	<title>propriedade first da section</title>
	<programlisting>
<![CDATA[
{section name=consumidor loop=$custid}
	{if $smarty.section.consumidor.first}
    	<table>
	{/if}

	<tr><td>{$smarty.section.consumidor.index} id: {$custid[consumidor]}</td></tr>

	{if $smarty.section.consumidor.last}
    	</table>
	{/if}
{/section}
]]>
</programlisting>
<para>MOSTRA:</para>
<programlisting>
<![CDATA[
<table>
	<tr><td>0 id: 1000</td></tr>
	<tr><td>1 id: 1001</td></tr>
	<tr><td>2 id: 1002</td></tr>
</table>
]]>
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.last">
			<title>last</title>
			<para>
        	last é definido como true se a interação atual da 
        	section é a última.
			</para>
	<example>
	<title>propriedade last da section</title>
	<programlisting>
<![CDATA[
{section name=consumidor loop=$custid}
	{if $smarty.section.consumidor.first}
    	<table>
	{/if}

	<tr><td>{$smarty.section.consumidor.index} id: {$custid[consumidor]}</td></tr>

	{if $smarty.section.consumidor.last}
    	</table>
	{/if}
{/section}
]]>
</programlisting>
<para>MOSTRA:</para>
<programlisting>
<![CDATA[
<table>
	<tr><td>0 id: 1000</td></tr>
	<tr><td>1 id: 1001</td></tr>
	<tr><td>2 id: 1002</td></tr>
</table>
]]>
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.rownum">	
			<title>rownum</title>
			<para>
			rownum é usado para mostrar a interação atual do loop,
			começando em um. É um sinônimo de iteration, 
			eles exercem a mesma função.
			</para>
	<example>
	<title>propriedade rownum da section</title>
	<programlisting>
<![CDATA[
{section name=consumidor loop=$custid}
	{$smarty.section.consumidor.rownum} id: {$custid[consumidor]}<br>
{/section}
]]>
</programlisting>
<para>MOSTRA:</para>
<programlisting>
<![CDATA[
1 id: 1000<br>
2 id: 1001<br>
3 id: 1002<br>
]]>
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.loop">	
			<title>loop</title>
			<para>
			loop é usado para exibir o número do último índice que a section percorreu. 
			Ele pode ser usado dentro ou após o término da section.
			</para>
	<example>
	<title>propridade index da section</title>
	<programlisting>
<![CDATA[
{section name=consumidor loop=$custid}
	{$smarty.section.consumidor.index} id: {$custid[consumidor]}<br>
{/section}

	Foram mostrados {$smarty.section.customer.loop} consumidores acima.
]]>
</programlisting>
<para>MOSTRA:</para>
<programlisting>
<![CDATA[
0 id: 1000<br>
1 id: 1001<br>
2 id: 1002<br>

Foram mostrados 3 consumidores acima.
]]>
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.show">	
			<title>show</title>
			<para>
            <emphasis>show</emphasis> é usado como um parâmetro da section. <emphasis>show</emphasis> 
			é um valor booleano, verdadeiro ou falso. Caso seja falso, a section não será mostrada. 
			Se existir uma sectionelse presente, ela será exibida.
			</para>
	<example>
	<title>atributo show da section</title>
	<programlisting>
<![CDATA[
{* $mostrar_info_consumidor talvez tenha que ser enviada pela 
   aplicação PHP, para decidir quando mostrar ou não mostrar esta section *}

{section name=consumidor loop=$custid show=$mostrar_info_consumidor}
	{$smarty.section.consumidor.rownum} id: {$custid[consumidor]}<br>
{/section}

{if $smarty.section.consumidor.show}
	a section foi mostrada.
{else}
	a section não foi mostrada.
{/if}
]]>
</programlisting>
<para>MOSTRA:</para>
<programlisting>
<![CDATA[
1 id: 1000<br>
2 id: 1001<br>
3 id: 1002<br>

a section foi mostrada.
]]>
</programlisting>
	</example>
			</sect2>
			<sect2 id="section.property.total">	
			<title>total</title>
			<para>
			total é usado para exibir o número de interações que esta section irá percorrer. 
			Ela pode ser usada dentro ou após a section.
			</para>
	<example>
	<title>propriedade total da section</title>
	<programlisting>
<![CDATA[
{section name=consumidor loop=$custid step=2}	
	{$smarty.section.consumidor.index} id: {$custid[consumidor]}<br>
{/section}

	Foram mostrados {$smarty.section.customer.loop} consumidores acima.
]]>
</programlisting>
<para>MOSTRA:</para>
<programlisting>
<![CDATA[
0 id: 1000<br>
2 id: 1001<br>
4 id: 1002<br>

Foram mostrados 3 consumidores acima.
]]>
</programlisting>
	</example>
			</sect2>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->