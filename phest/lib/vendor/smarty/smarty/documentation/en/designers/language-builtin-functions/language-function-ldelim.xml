<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 3827 $ -->
 <sect1 id="language.function.ldelim">
  <title>{ldelim},{rdelim}</title>
  <para>
   <varname>{ldelim}</varname> and <varname>{rdelim}</varname> are used for
   <link linkend="language.escaping">escaping</link>
   template delimiters, by default
   <emphasis role="bold">{</emphasis> and <emphasis role="bold">}</emphasis>.
   You can also use <link linkend="language.function.literal"><varname>{literal}{/literal}</varname></link>
   to escape blocks of text eg Javascript or CSS.
    See also the complimentary <link
    linkend="language.variables.smarty.ldelim"><parameter>{$smarty.ldelim}</parameter></link>.
  </para>
  <example>
   <title>{ldelim}, {rdelim}</title>
   <programlisting>
<![CDATA[
{* this will print literal delimiters out of the template *}

{ldelim}funcname{rdelim} is how functions look in Smarty!
]]>
   </programlisting>
   <para>
    The above example will output:
   </para>
   <screen>
<![CDATA[
{funcname} is how functions look in Smarty!
]]>
   </screen>
   <para>Another example with some Javascript</para>
   <programlisting>
<![CDATA[
<script language="JavaScript">
function foo() {ldelim}
    ... code ...
{rdelim}
</script>
]]>
   </programlisting>
   <para>
   will output
   </para>
   <screen>
<![CDATA[
<script language="JavaScript">
function foo() {
    .... code ...
}
</script>
]]>
   </screen>

  </example>

  <example>
     <title>Another Javascript example</title>
<programlisting>
<![CDATA[
<script language="JavaScript" type="text/javascript">
    function myJsFunction(){ldelim}
        alert("The server name\n{$smarty.server.SERVER_NAME}\n{$smarty.server.SERVER_ADDR}");
    {rdelim}
</script>
<a href="javascript:myJsFunction()">Click here for Server Info</a>
]]>
</programlisting>
 </example>

  <para>See also
  <link linkend="language.function.literal"><varname>{literal}</varname></link>
  and <link linkend="language.escaping">escaping Smarty parsing</link>.
  </para>
 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
