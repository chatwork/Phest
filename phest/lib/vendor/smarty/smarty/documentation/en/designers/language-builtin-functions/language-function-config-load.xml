<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 4278 $ -->
<sect1 id="language.function.config.load">
 <title>{config_load}</title>
  <para>
   <varname>{config_load}</varname> is used for loading  config
   <link linkend="language.config.variables"><parameter>#variables#</parameter></link>
   from a <link linkend="config.files">configuration file</link> into the template.
 </para>

 <para><emphasis role="bold">Attributes:</emphasis></para>
 <informaltable frame="all">
  <tgroup cols="5">
   <colspec colname="param" align="center" />
  <colspec colname="type" align="center" />
   <colspec colname="required" align="center" />
   <colspec colname="default" align="center" />
   <colspec colname="desc" />
   <thead>
    <row>
     <entry>Attribute Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Description</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>file</entry>
     <entry>string</entry>
     <entry>Yes</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>The name of the config file to include</entry>
    </row>
    <row>
     <entry>section</entry>
    <entry>string</entry>
     <entry>No</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>The name of the section to load</entry>
    </row>
    <row>
     <entry>scope</entry>
     <entry>string</entry>
     <entry>no</entry>
     <entry><emphasis>local</emphasis></entry>
     <entry>
      How the scope of the loaded variables are treated,
      which must be one of local, parent or global. local
      means variables are loaded into the local template
      context. parent means variables are loaded into both
      the local context and the parent template that called
      it. global means variables are available to all
      templates.
     </entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>

 <example>
  <title>{config_load}</title>
  <para>
   The <filename>example.conf</filename> file.
  </para>
  <programlisting>
<![CDATA[
#this is config file comment

# global variables
pageTitle = "Main Menu"
bodyBgColor = #000000
tableBgColor = #000000
rowBgColor = #00ff00

#customer variables section
[Customer]
pageTitle = "Customer Info"
]]>
  </programlisting>
  <para>and the template</para>
  <programlisting>
<![CDATA[
{config_load file="example.conf"}
{config_load "example.conf"}  {* short-hand *}

<html>
<title>{#pageTitle#|default:"No title"}</title>
<body bgcolor="{#bodyBgColor#}">
<table border="{#tableBorderSize#}" bgcolor="{#tableBgColor#}">
   <tr bgcolor="{#rowBgColor#}">
      <td>First</td>
      <td>Last</td>
      <td>Address</td>
   </tr>
</table>
</body>
</html>
]]>
  </programlisting>
 </example>
 <para>
  <link linkend="config.files">Config Files</link>
  may also contain sections. You can load variables from
  within a section with the added attribute
  <parameter>section</parameter>. Note that global config
  variables are always loaded along with section variables,
  and same-named section variables overwrite the globals.
 </para>
 <note>
  <para>
   Config file <emphasis>sections</emphasis> and the built-in
   template function called
   <link linkend="language.function.section"><varname>{section}</varname></link>
   have nothing  to do with each other, they just happen to share a common naming
   convention.
  </para>
 </note>
 <example>
  <title>function {config_load} with section</title>
  <programlisting>
<![CDATA[
{config_load file='example.conf' section='Customer'}
{config_load 'example.conf' 'Customer'} {* short-hand *}

<html>
<title>{#pageTitle#}</title>
<body bgcolor="{#bodyBgColor#}">
<table border="{#tableBorderSize#}" bgcolor="{#tableBgColor#}">
   <tr bgcolor="{#rowBgColor#}">
      <td>First</td>
      <td>Last</td>
      <td>Address</td>
   </tr>
</table>
</body>
</html>
]]>
  </programlisting>
 </example>

<para>
See <link linkend="variable.config.overwrite"><parameter>$config_overwrite</parameter></link>
to create arrays of config file variables.
</para>

 <para>
  See also the <link linkend="config.files">config files</link> page,
  <link linkend="language.config.variables">config variables</link> page,
  <link linkend="variable.config.dir"><parameter>$config_dir</parameter></link>,
  <link linkend="api.get.config.vars"><varname>getConfigVars()</varname></link>
  and
  <link linkend="api.config.load"><varname>configLoad()</varname></link>.
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
