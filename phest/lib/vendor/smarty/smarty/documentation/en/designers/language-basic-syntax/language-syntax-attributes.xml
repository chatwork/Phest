<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 4020 $ -->
<sect1 id="language.syntax.attributes">
 <title>Attributes</title>
 <para>
  Most of the <link linkend="language.syntax.functions">functions</link>
  take attributes that specify or modify
  their behavior. Attributes to Smarty functions are much like HTML
  attributes. Static values don't have to be enclosed in quotes, but it
  is required for literal strings. Variables with or without modifiers may also be used, and
  should not be in quotes. You can even use PHP function results, plugin results and complex expressions.
 </para>
 <para>
  Some attributes require boolean values (&true; or &false;). These
  can be specified
  as <literal>true</literal> and <literal>false</literal>. If an attribute has no value assigned
  it gets the default boolean value of true.
 </para>
 <example>
  <title>function attribute syntax</title>
  <programlisting>
<![CDATA[
{include file="header.tpl"}

{include file="header.tpl" nocache}  // is equivalent to nocache=true

{include file="header.tpl" attrib_name="attrib value"}

{include file=$includeFile}

{include file=#includeFile# title="My Title"}

{assign var=foo value={counter}}  // plugin result

{assign var=foo value=substr($bar,2,5)}  // PHP function result

{assign var=foo value=$bar|strlen}  // using modifier

{assign var=foo value=$buh+$bar|strlen}  // more complex expression

{html_select_date display_days=true}

{mailto address="smarty@example.com"}

<select name="company_id">
  {html_options options=$companies selected=$company_id}
</select>
]]>
  </programlisting>
 </example>
 
 <note><para>
    Although Smarty can handle some very complex expressions and syntax, it is a good rule of
    thumb to keep the template syntax minimal and focused on presentation. If you find your
    template syntax getting too complex, it may be a good idea to move the bits that do not
    deal explicitly with presentation to PHP by way of plugins or modifiers.
 </para></note>
 
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
