<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 3827 $ -->
 <sect1 id="language.modifier.wordwrap">
  <title>wordwrap</title>
    <para>
     Wraps a string to a column width,
     the default is 80. As an optional second parameter,
     you can specify a string of text
     to wrap the text to the next line, the default is a carriage return
     <literal>"\n"</literal>.
     By default, <varname>wordwrap</varname> will attempt to wrap at a word
     boundary. If  you want to cut off at the exact character length, pass
     the optional third parameter as &true;. This is equivalent to the PHP
     <ulink url="&url.php-manual;wordwrap"><varname>wordwrap()</varname></ulink>
     function.
  </para>

  <informaltable frame="all">
   <tgroup cols="5">
    <colspec colname="param" align="center" />
    <colspec colname="type" align="center" />
    <colspec colname="required" align="center" />
    <colspec colname="default" align="center" />
    <colspec colname="desc"/>
    <thead>
     <row>
      <entry>Parameter Position</entry>
      <entry>Type</entry>
      <entry>Required</entry>
      <entry>Default</entry>
      <entry>Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>1</entry>
      <entry>integer</entry>
      <entry>No</entry>
      <entry>80</entry>
      <entry>This determines how many columns to wrap
       to.</entry>
     </row>
     <row>
      <entry>2</entry>
      <entry>string</entry>
      <entry>No</entry>
      <entry>\n</entry>
      <entry>This is the string used to wrap words with.</entry>
     </row>
     <row>
      <entry>3</entry>
      <entry>boolean</entry>
      <entry>No</entry>
      <entry>&false;</entry>
      <entry>This determines whether or not to wrap at a
       word boundary (&false;), or at the exact character (&true;).</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>

  <example>
   <title>wordwrap</title>
   <programlisting role="php">
<![CDATA[
<?php

$smarty->assign('articleTitle',
                "Blind woman gets new kidney from dad she hasn't seen in years."
               );

?>
]]>
   </programlisting>
   <para>
    Where template is
   </para>
   <programlisting>
<![CDATA[
{$articleTitle}

{$articleTitle|wordwrap:30}

{$articleTitle|wordwrap:20}

{$articleTitle|wordwrap:30:"<br />\n"}

{$articleTitle|wordwrap:26:"\n":true}
]]>
   </programlisting>
   <para>
    Will output:
   </para>
   <screen>
<![CDATA[
Blind woman gets new kidney from dad she hasn't seen in years.

Blind woman gets new kidney
from dad she hasn't seen in
years.

Blind woman gets new
kidney from dad she
hasn't seen in
years.

Blind woman gets new kidney<br />
from dad she hasn't seen in<br />
years.

Blind woman gets new kidn
ey from dad she hasn't se
en in years.
]]>
   </screen>
  </example>
  <para>
   See also
   <link linkend="language.modifier.nl2br"><varname>nl2br</varname></link>
   and
   <link linkend="language.function.textformat"><varname>{textformat}</varname></link>.
  </para>
 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

