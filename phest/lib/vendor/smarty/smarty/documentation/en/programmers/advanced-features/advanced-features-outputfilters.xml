<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 4278 $ -->
  <sect1 id="advanced.features.outputfilters">
   <title>Output Filters</title>
   <para>
    When the template is invoked via
    <link linkend="api.display"><varname>display()</varname></link> or
    <link linkend="api.fetch"><varname>fetch()</varname></link>, its output can
    be  sent through one or more output filters. This differs from
    <link linkend="advanced.features.postfilters">
    <varname>postfilters</varname></link>
    because postfilters operate on compiled templates before they are saved to
    the disk, whereas output filters operate on the template output when it is
    executed.
   </para>

   <para>
    Output filters can be either
    <link linkend="api.register.filter">registered</link> or loaded
    from the
    <link linkend="variable.plugins.dir">plugins directory</link> by using the
    <link linkend="api.load.filter"><varname>loadFilter()</varname></link>
    method or by setting the  <link linkend="variable.autoload.filters">
    <parameter>$autoload_filters</parameter></link> variable.
    Smarty will pass the template output as the first argument,
    and expect the function to return the result of the processing.
   </para>
   <example>
    <title>Using a template outputfilter</title>
    <programlisting role="php">
<![CDATA[
<?php
// put this in your application
function protect_email($tpl_output, Smarty_Internal_Template $template)
{
    $tpl_output =
       preg_replace('!(\S+)@([a-zA-Z0-9\.\-]+\.([a-zA-Z]{2,3}|[0-9]{1,3}))!',
                    '$1%40$2', $tpl_output);
    return $tpl_output;
}

// register the outputfilter
$smarty->registerFilter("output","protect_email");
$smarty->display("index.tpl');

// now any occurrence of an email address in the template output will have
// a simple protection against spambots
?>
]]>
    </programlisting>
   </example>
   <para>
   See also
   <link linkend="api.register.filter"><varname>registerFilter()</varname></link>,
   <link linkend="api.load.filter"><varname>loadFilter()</varname></link>,
   <link linkend="variable.autoload.filters"><parameter>$autoload_filters</parameter></link>,
   <link linkend="advanced.features.postfilters">postfilters</link> and
   <link linkend="variable.plugins.dir"><parameter>$plugins_dir</parameter></link>.
   </para>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
