<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 4278 $ -->
<refentry id="api.register.resource">
 <refnamediv>
  <refname>registerResource()</refname>
  <refpurpose>dynamically register resources</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>void</type><methodname>registerResource</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam><type>Smarty_resource</type><parameter>resource_handler</parameter></methodparam>
  </methodsynopsis>
  <para>
   Use this to dynamically register a
   <link linkend="resources">Resource plugin</link>
   with Smarty.
   Pass in the <parameter>name</parameter> of the Resource  and the object extending Smarty_Resource. See
   <link linkend="resources">template resources</link>
   for more information on how to setup a function for fetching templates.
     <note>
   <title>Technical Note</title>
   <para>
    A resource name must be at least two characters in length. One
    character resource names will be ignored and used as part of the file
    path, such as <literal>$smarty->display('c:/path/to/index.tpl');</literal>
   </para>
  </note>
   </para>

  <note>
   <para>
	Prior to Smarty 3.1 <varname>registerResource()</varname> accepted an array of callback functions. 
	While this is still possible for backward compatibility reasons, it is strongly discouraged as callback 
	functions have been deprecated as of Smarty 3.1.
   </para>
  </note>

  <example>
   <title>registerResource()</title>
   <programlisting role="php">
<![CDATA[
<?php
$smarty->registerResource('mysql', new Smarty_Resource_Mysql());
?>
]]>
   </programlisting>
  </example>

<para>
  See also
  <link linkend="api.unregister.resource"><varname>unregisterResource()</varname></link>
  and the
  <link linkend="resources">template resources</link> section.
</para>

 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
