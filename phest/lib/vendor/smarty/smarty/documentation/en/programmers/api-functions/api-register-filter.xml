<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 3827 $ -->
<refentry id="api.register.filter">
 <refnamediv>
  <refname>registerFilter()</refname>
  <refpurpose>dynamically register filters</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>void</type><methodname>registerFilter</methodname>
   <methodparam><type>string</type><parameter>type</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>callback</parameter></methodparam>
  </methodsynopsis>
  <para>
   Use this to dynamically register filters to operate on
   a templates.
   It uses the following parameters:
   <itemizedlist>
    &parameter.filtertype;
   &parameter.callback;
   </itemizedlist>   
  </para>
   &note.parameter.function;

  <para>
   A <link linkend="plugins.prefilters.postfilters">prefilter</link> runs through the template source before it gets compiled. See <link
    linkend="advanced.features.prefilters">template prefilters</link> for
   more information on how to setup a prefiltering function.
  </para>
 
  <para>
   A <link linkend="plugins.prefilters.postfilters">postfilter</link> runs through the template code after it was compiled to PHP. See <link
    linkend="advanced.features.postfilters">template postfilters</link> for
   more information on how to setup a postfiltering function.
  </para>
  
  <para>
   A <link linkend="plugins.outputfilters">outputfilter</link> operates on
   a template's output before it is
   <link linkend="api.display">displayed</link>. See
   <link linkend="advanced.features.outputfilters">template output
    filters</link>
   for more information on how to set up an output filter function.
  </para>

  <para>
See also
<link linkend="api.unregister.filter"><varname>unregisterFilter()</varname></link>,
<link linkend="api.load.filter"><varname>loadFilter()</varname></link>,
<link linkend="variable.autoload.filters"><parameter>$autoload_filters</parameter></link>,
 <link linkend="advanced.features.prefilters">template pre filters</link>
 <link linkend="advanced.features.postfilters">template post filters</link>
 <link linkend="advanced.features.outputfilters">template output filters</link>
 section.
</para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
