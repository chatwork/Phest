<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 4278 $ -->
<sect1 id="advanced.features.postfilters">
 <title>Postfilters</title>
 <para>
  Template postfilters are PHP functions that your templates are ran through
  <emphasis>after they are compiled</emphasis>. Postfilters can be either
  <link linkend="api.register.filter">registered</link> or loaded
  from the <link linkend="variable.plugins.dir">plugins directory</link>
  by using the
  <link linkend="api.load.filter"><varname>loadFilter()</varname></link>
   function or by setting the <link linkend="variable.autoload.filters">
   <parameter>$autoload_filters</parameter></link> variable.
   Smarty will pass the compiled template code as the first
  argument, and expect the function to return the result of the
  processing.
 </para>
 <example>
  <title>Using a template postfilter</title>
  <programlisting role="php">
<![CDATA[
<?php
// put this in your application
function add_header_comment($tpl_source, Smarty_Internal_Template $template)
{
    return "<?php echo \"<!-- Created by Smarty! -->\n\"; ?>\n".$tpl_source;
}

// register the postfilter
$smarty->registerFilter('post','add_header_comment');
$smarty->display('index.tpl');
?>
]]>
  </programlisting>
  <para>
   The postfilter above will make the compiled Smarty template
   <filename>index.tpl</filename> look like:
  </para>
  <screen>
<![CDATA[
<!-- Created by Smarty! -->
{* rest of template content... *}
]]>
  </screen>
 </example>
 <para>
 See also
 <link linkend="api.register.filter"><varname>registerFilter()</varname></link>,
 <link linkend="advanced.features.prefilters">prefilters</link>,
 <link linkend="advanced.features.outputfilters">outputfilters</link>,
 and
 <link linkend="api.load.filter"><varname>loadFilter()</varname></link>.
 </para>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
