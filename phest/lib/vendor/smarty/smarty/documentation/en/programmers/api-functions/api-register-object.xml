<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 3827 $ -->
<refentry id="api.register.object">
 <refnamediv>
  <refname>registerObject()</refname>
  <refpurpose>register an object for use in the templates</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>void</type><methodname>registerObject</methodname>
   <methodparam><type>string</type><parameter>object_name</parameter></methodparam>
   <methodparam><type>object</type><parameter>object</parameter></methodparam>
   <methodparam><type>array</type><parameter>allowed_methods_properties</parameter>
   </methodparam>
   <methodparam><type>boolean</type><parameter>format</parameter></methodparam>
   <methodparam><type>array</type><parameter>block_methods</parameter></methodparam>
  </methodsynopsis>

  <note><para>
    When you register/assign objects to templates, be sure that all properties and methods accessed from the template are for presentation purposes only. It is very easy to inject application logic through objects, and this leads to poor designs that are difficult to manage. See the Best Practices section of the Smarty website.
  </para></note>  
  
  <para>
   See the
   <link linkend="advanced.features.objects">objects section</link>
   for more information.
  </para>
  <para>
   See also
   <link linkend="api.get.registered.object"><varname>getRegisteredObject()</varname></link>,
   and
   <link linkend="api.unregister.object"><varname>unregisterObject()</varname></link>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

