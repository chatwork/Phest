<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 4309 $ -->
<refentry id="api.fetch">
 <refnamediv>
  <refname>fetch()</refname>
  <refpurpose>returns the template output</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>string</type><methodname>fetch</methodname>
   <methodparam><type>string</type><parameter>template</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>cache_id</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>compile_id</parameter>
   </methodparam>
  </methodsynopsis>
  <para>
   This returns the template output instead of
   <link linkend="api.display">displaying</link> it.
   Supply a valid <link
   linkend="resources">template resource</link>
   type and path. As an optional second parameter, you can pass a
   <parameter>$cache id</parameter>, see the <link linkend="caching">caching
   section</link> for more information.
  </para>
  &parameter.compileid;
  <para>
   <example>
    <title>fetch()</title>
    <programlisting role="php">
<![CDATA[
<?php
include('Smarty.class.php');
$smarty = new Smarty;

$smarty->setCaching(true);

// set a separate cache_id for each unique URL
$cache_id = md5($_SERVER['REQUEST_URI']);

// capture the output
$output = $smarty->fetch('index.tpl', $cache_id);

// do something with $output here
echo $output;
?>
]]>
    </programlisting>
   </example>
  </para>

  <para>
   <example>
    <title>Using fetch() to send an email</title>
    <para>
     The <filename>email_body.tpl</filename> template
    </para>
    <programlisting>
<![CDATA[
Dear {$contact_info.name},

Welcome and thank you for signing up as a member of our user group.

Click on the link below to login with your user name
of '{$contact_info.username}' so you can post in our forums.

{$login_url}

List master

{textformat wrap=40}
This is some long-winded disclaimer text that would automatically get wrapped
at 40 characters. This helps make the text easier to read in mail programs that
do not wrap sentences for you.
{/textformat}
]]>
    </programlisting>
    <para>
     The php script using the PHP
     <ulink url="&url.php-manual;function.mail">
     <varname>mail()</varname></ulink> function
    </para>
    <programlisting role="php">
<![CDATA[
<?php

// get $contact_info from db or other resource here

$smarty->assign('contact_info',$contact_info);
$smarty->assign('login_url',"http://{$_SERVER['SERVER_NAME']}/login");

mail($contact_info['email'], 'Thank You', $smarty->fetch('email_body.tpl'));

?>
]]>
    </programlisting>
   </example>
  </para>

  <para>
   See also
   <link linkend="language.function.fetch"><varname>{fetch}</varname></link>
   <link linkend="api.display"><varname>display()</varname></link>,
   <link linkend="language.function.eval"><varname>{eval}</varname></link>,
   and
   <link linkend="api.template.exists"><varname>templateExists()</varname></link>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
