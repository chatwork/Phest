<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 3827 $ -->
<sect1 id="resources.extends">
 <title>Extends Template Resources</title>
 <para>
  The <literal>extends:</literal> resource is used to define child/parent relationships for template inheritance from the PHP script.
  For details see section of <link linkend="advanced.features.template.inheritance">Template Interitance</link>.
 </para>
 <para>
   As of Smarty 3.1 the <literal>extends:</literal> resource may use any available 
   <link linkend="resources">template resource</link>, 
   including <literal>string:</literal> and <literal>eval:</literal>.
   When <link linkend="resources.string">templates from strings</link> are used,
   make sure they are properly (url or base64) encoded. Is an <literal>eval:</literal> resource
   found within an inheritance chain, its "don't save a compile file" property is superseeded by
   the <literal>extends:</literal> resource. The templates within an inheritance chain are not
   compiled separately, though. Only a single compiled template will be generated.
 </para>
 <note>
  <para>
    Use this when inheritance is required programatically. When inheriting within PHP, 
    it is not obvious from the child template what inheritance took place. If you have a choice, 
    it is normally more flexible and intuitive to handle inheritance chains from within the templates.
  </para>
 </note>
 <example>
  <title>Using template inheritance from the PHP script</title>
  <programlisting role="php">
<![CDATA[
<?php
$smarty->display('extends:parent.tpl|child.tpl|grandchild.tpl'); 

// inheritance from multiple template sources
$smarty->display('extends:db:parent.tpl|file:child.tpl|grandchild.tpl|eval:{block name="fooBazVar_"}hello world{/block}'); 
?>
]]>
  </programlisting>
 </example>
 <para>
  See also
  <link linkend="advanced.features.template.inheritance">Template Inheritance</link>
  <link linkend="language.function.block"><varname>{block}</varname></link> and
  <link linkend="language.function.extends"><varname>{extends}</varname></link>.
  </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
