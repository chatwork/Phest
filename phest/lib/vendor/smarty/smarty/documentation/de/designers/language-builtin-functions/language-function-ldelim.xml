<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
<!-- EN-Revision: 1.9 Maintainer: andreas Status: ready -->
 <sect1 id="language.function.ldelim">
  <title>ldelim,rdelim (Ausgabe der Trennzeichen)</title>
  <para>
   ldelim und rdelim werden verwendet, um die Trennzeichen auszugeben -
   in unserem Fall "{" oder "}" - ohne dass Smarty versucht, sie zu
   interpretieren. Um text im Template vor dem Interpretieren zu
   sch√ºtzen kann auch <link
   linkend="language.function.literal">{literal}{/literal}</link>
   verwendet werden. Siehe auch <link
   linkend="language.variables.smarty.ldelim">{$smarty.ldelim}</link>.
  </para>
  <example>
   <title>ldelim, rdelim</title>
   <programlisting>
<![CDATA[
{* gibt die konfigurierten Trennzeichen des Templates aus *}

{ldelim}funktionsname{rdelim} Funktionen sehen in Smarty so aus!
]]>
   </programlisting>
   <para>
    Das obige Beispiel ergibt als Ausgabe:
   </para>
   <screen>
<![CDATA[
{funktionsname} Funktionen sehen in Smarty so aus!</programlisting>
]]>
   </screen>
   <para>
    Ein weiteres Beispiel (diesmal mit javascript)
   </para>
   <programlisting>
<![CDATA[
<script language="JavaScript">
function foo() {ldelim}
    ... code ...
{rdelim}
</script>
]]>
   </programlisting>
   <para>
    Ausgabe:
   </para>
   <screen>
<![CDATA[
<script language="JavaScript">
function foo() {
    .... code ...
}
</script>
]]>
   </screen>

  </example>
  <para>
   Siehe auch <link linkend="language.escaping">Smarty Parsing umgehen</link>
  </para>
 </sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
