<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2977 $ -->
<!-- EN-Revision: 1.6 Maintainer: andreas Status: ready -->
<sect1 id="language.function.assign">
 <title>{assign} (zuweisen)</title>
 <para>
  {assign} wird verwendet um einer Template-Variable <emphasis
  role="bold">innerhalb eines Templates</emphasis> einen Wert
  zuzuweisen.
 </para>
 <informaltable frame="all">
  <tgroup cols="5">
   <colspec colname="param" align="center" />
   <colspec colname="type" align="center" />
   <colspec colname="required" align="center" />
   <colspec colname="default" align="center" />
   <colspec colname="desc" />
   <thead>
    <row>
     <entry>Attribut Name</entry>
     <entry>Typ</entry>
     <entry>Erforderlich</entry>       
     <entry>Standardwert</entry>
     <entry>Beschreibung</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>var</entry>
     <entry>string</entry>
     <entry>Ja</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>Der Name der zuzuweisenden Variable.</entry>
    </row>
    <row>
     <entry>value</entry>
     <entry>string</entry>
     <entry>Ja</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>Der zuzuweisende Wert.</entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>
 <example>
 <title>{assign} (zuweisen)</title>
  <programlisting>
<![CDATA[
{assign var="name" value="Bob"}

Der Wert von $name ist {$name}.
]]>
  </programlisting>
  <para>
   Ausgabe des obiges Beispiels:
  </para>
  <screen>
<![CDATA[
Der Wert von $name ist Bob.</programlisting>
]]>
  </screen>
 </example>
 <example>
  <title>Zugriff auf mit {assign} zugwiesene Variablen von PHP aus.</title>
  <para>
   Um auf zugewiesene Variablen von php aus zuzugreifen nimmt man
   <link linkend="api.get.template.vars">get_template_vars()</link>.
   Die zugewiesenen variablen sind jedoch nur wärhend bzw. nach der
   Ausgabe des Template verfügbar.
  </para>
  <programlisting>
<![CDATA[
{* index.tpl *}
{assign var="foo" value="Smarty"}
]]>
  </programlisting>
  <programlisting role="php">
<![CDATA[
<?php

// Keine Ausgabe, das das Template noch nicht ausgegeben wurde:
echo $smarty->get_template_vars('foo');

// das Template in eine ungenutzte Variable ausgeben
$nix = $smarty->fetch('index.tpl');

// Gibt 'smarty' aus, da die {assign} anweisung im Template ausgeführt
// wurde
echo $smarty->get_template_vars('foo');

$smarty->assign('foo','Even smarter');

// Ausgabe 'Even smarter'
echo $smarty->get_template_vars('foo');

?>
]]>
  </programlisting>
 </example>
 <para>
  Folgende Funktionen haben <emphasis>optionale</emphasis>
  assign-Attribute:
 </para>
 <para>
  <link linkend="language.function.capture">{capture}</link>,
  <link linkend="language.function.include">{include}</link>,
  <link linkend="language.function.include.php">{include_php}</link>,
  <link linkend="language.function.insert">{insert}</link>,
  <link linkend="language.function.counter">{counter}</link>,
  <link linkend="language.function.cycle">{cycle}</link>,
  <link linkend="language.function.eval">{eval}</link>,
  <link linkend="language.function.fetch">{fetch}</link>,
  <link linkend="language.function.math">{math}</link>,
  <link linkend="language.function.textformat">{textformat}</link>
 </para>
 <para>
  Siehe auch <link linkend="api.assign">assign()</link> und <link
  linkend="api.get.template.vars">get_template_vars()</link>.
 </para>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
