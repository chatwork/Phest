<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2978 $ -->
<!-- EN-Revision: 1.8 Maintainer: andreas Status: ready -->
<sect1 id="language.function.if">
 <title>{if},{elseif},{else}</title>
 <para>
  <emphasis>{if}</emphasis>-Statements in Smarty erlauben die selbe
  Flexibilität wie in PHP, bis auf ein paar Erweiterungen für die
  Template-Engine. Jedes <emphasis>{if}</emphasis> muss mit einem
  <emphasis>{/if}</emphasis> kombiniert
  sein. <emphasis>{else}</emphasis> und <emphasis>{elseif}</emphasis>
  sind ebenfalls erlaubt. Alle PHP Vergleichsoperatoren und Funktionen, wie
  <emphasis>||</emphasis>, <emphasis>or</emphasis>,
  <emphasis>&amp;&amp;</emphasis>, <emphasis>and</emphasis>,
  <emphasis>is_array()</emphasis>, etc. sind erlaubt.
 </para>
 <para>
  Wenn <link linkend="variable.security">$security</link> angeschaltet
  wurde, dann müssen alle verwendeten PHP-Funktionen im
  <emphasis>IF_FUNCS</emphasis>-Array in dem <link
  linkend="variable.security.settings">$security_settings</link>-Array
  deklariert werden.
 </para>
 <para>
  Hier eine Liste der erlaubten Operatoren. Bedingungsoperatoren
  müssen von umgebenden Elementen mit Leerzeichen abgetrennt werden.
  PHP-Äquivalente sind, sofern vorhanden, angeben.
 </para>
 <informaltable frame="all">
  <tgroup cols="5">
   <colspec colname="Operator" align="center" />
   <colspec colname="Alternativen" align="center" />
   <colspec colname="Syntax Beispiel" />
   <colspec colname="Bedeutung" />
   <colspec colname="PHP Äquivalent" />
   <thead>
    <row>
     <entry>Operator</entry>
     <entry>Alternativen</entry>
     <entry>Syntax Beispiel</entry>
     <entry>Bedeutung</entry>
     <entry>PHP Äquivalent</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>==</entry>
     <entry>eq</entry>
     <entry>$a eq $b</entry>
     <entry>ist gleich</entry>
     <entry>==</entry>
    </row>
    <row>
     <entry>!=</entry>
     <entry>ne, neq</entry>
     <entry>$a neq $b</entry>
     <entry>ist ungleich</entry>
     <entry>!=</entry>
    </row>
    <row>
     <entry>&gt;</entry>
     <entry>gt</entry>
     <entry>$a gt $b</entry>
     <entry>größer als</entry>
     <entry>&gt;</entry>
    </row>
    <row>
     <entry>&lt;</entry>
     <entry>lt</entry>
     <entry>$a lt $b</entry>
     <entry>kleiner als</entry>
     <entry>&lt;</entry>
    </row>
    <row>
     <entry>&gt;=</entry>
     <entry>gte, ge</entry>
     <entry>$a ge $b</entry>
     <entry>größer oder gleich</entry>
     <entry>&gt;=</entry>
    </row>
    <row>
     <entry>&lt;=</entry>
     <entry>lte, le</entry>
     <entry>$a le $b</entry>
     <entry>kleiner oder gleich</entry>
     <entry>&lt;=</entry>
    </row>
    <row>
     <entry>===</entry>
     <entry></entry>
     <entry>$a === 0</entry>
     <entry>identisch</entry>
     <entry>===</entry>
    </row>
    <row>
     <entry>!</entry>
     <entry>not</entry>
     <entry>not $a</entry>
     <entry>Negation</entry>
     <entry>!</entry>
    </row>
    <row>
     <entry>%</entry>
     <entry>mod</entry>
     <entry>$a mod $b</entry>
     <entry>Modulo</entry>
     <entry>%</entry>
    </row>
    <row>
     <entry>is [not] div by</entry>
     <entry></entry>
     <entry>$a is not div by 4</entry>
     <entry>Ist [nicht] teilbar durch</entry>
     <entry>$a % $b == 0</entry>
    </row>
    <row>
     <entry>is [not] even</entry>
     <entry></entry>
     <entry>$a is not even</entry>
     <entry>ist [k]eine gerade Zahl</entry>
     <entry>$a % 2 == 0</entry>
    </row>
    <row>
     <entry>is [not] even by</entry>
     <entry></entry>
     <entry>$a is [not] even by $b</entry>
     <entry>[k]eine gerade Gruppierung</entry>
     <entry>($a / $b) % 2 == 0</entry>
    </row>
    <row>
     <entry>is [not] odd</entry>
     <entry></entry>
     <entry>$a is not odd</entry>
     <entry>ist [k]eine ungerade Zahl</entry>
     <entry>$a % 2 != 0</entry>
    </row>
    <row>
     <entry>is [not] odd by</entry>
     <entry></entry>
     <entry>$a is not odd by $b</entry>
     <entry>[k]eine ungerade Gruppierung</entry>
     <entry>($a / $b) % 2 != 0</entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>
 <example>
  <title>if Anweisung</title>
  <programlisting>
<![CDATA[
{* ein Beispiel mit 'eq' (gleich) *}
{if $name eq "Fred"}
	Willkommen der Herr.
{elseif $name eq "Wilma"}
	Willkommen die Dame.
{else}
	Willkommen, was auch immer Du sein magst.
{/if}

{* ein Beispiel mit 'or'-Logik *}
{if $name eq "Fred" or $name eq "Wilma"}
	...
{/if}

{* das selbe *}
{if $name == "Fred" || $name == "Wilma"}
	...
{/if}

{*
  die foldende Syntax ist nicht korrekt, da die Elemente welche die
  Bedingung umfassen nicht mit Leerzeichen abgetrennt sind
*}
{if $name=="Fred" || $name=="Wilma"}
	...
{/if}


{* Klammern sind erlaubt *}
{if ( $anzahl < 0 or $anzahl > 1000 ) and $menge >= #minMengeAmt#}
	...
{/if}


{* einbetten von php Funktionsaufrufen ('gt' steht für 'grösser als') *}
{if count($var) gt 0}
	...
{/if}

{* Auf "ist array" überprüfen. *}
{if is_array($foo) }
   .....
{/if}

{* Auf "ist nicht null" überprüfen. *}
{if isset($foo) }
   .....
{/if}



{* testen ob eine Zahl gerade (even) oder ungerade (odd) ist *}
{if $var is even}
	...
{/if}
{if $var is odd}
	...
{/if}
{if $var is not odd}
	...
{/if}


{* testen ob eine Zahl durch 4 teilbar ist (div by) *}
{if $var is div by 4}
	...
{/if}


{* testen ob eine Variable gerade ist, gruppiert nach 2
   0=gerade, 1=gerade, 2=ungerade, 3=ungerade, 4=gerade, 5=gerade, etc *}
{if $var is even by 2}
	...
{/if}

{* 0=gerade, 1=gerade, 2=gerade, 3=ungerade, 4=ungerade, 5=ungerade, etc *}
{if $var is even by 3}
	...
{/if}
]]>
</programlisting>
</example>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
