<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2978 $ -->
<!-- EN-Revision: 1.7 Maintainer: andreas Status: ready -->
<chapter id="chapter.debugging.console">
 <title>Debugging Konsole</title>
 <para>
  Smarty wird mit einer eingebauten Debugging Konsole
  ausgeliefert. Diese Konsole informiert über die im aufgerufenen
  Template <link
  linkend="language.function.include">eingebundenen</link> Templates,
  die <link linkend="api.assign">zugewiesenen</link> Variablen und die
  <link
  linkend="language.config.variables">Konfigurations-Variablen</link>.
  Die Formatierung der Konsole wird über das Template <link
  linkend="variable.debug.tpl">debug.tpl</link> gesteuert. Um
  debugging zu aktivieren, setzten Sie <link
  linkend="variable.debugging">$debugging</link> auf 'true' und (falls
  nötig) übergeben in <link
  linkend="variable.debug.tpl">$debug_tpl</link> den Pfad zum
  Debugtemplate (normalerweise <link
  linkend="constant.smarty.dir">SMARTY_DIR</link>debug.tpl). Wenn Sie
  danach eine Seite laden, sollte ein Javascript-Fenster geöffnet
  werden in welchem Sie alle Informationen zur aufgerufenen Seite
  finden. Falls Sie die Variablen eines bestimmten Templates ausgeben
  wollen, können Sie dazu die Funktion <link
  linkend="language.function.debug">{debug}</link> verwenden. Um
  debugging auszuschalten, können Sie <link
  linkend="variable.debugging">$debugging</link> auf 'false' setzen.
  Sie können debugging auch temporär aktivieren, in dem Sie der
  aufgerufenen URL SMARTY_DEBUG mit übergeben, dies muss jedoch
  zuerst mit <link
  linkend="variable.debugging.ctrl">$debugging_ctrl</link> aktiviert
  werden.
 </para>
 <note>
  <title>Technische Bemerkung</title>
  <para>
   Die Debugging Konsole funktioniert nicht für Daten die via <link
   linkend="api.fetch">fetch()</link> geladen wurden, sondern nur
   für Daten die via <link linkend="api.display">display()</link>
   ausgegeben werden. Die Konsole besteht aus ein paar Zeilen
   Javascript welche am Ende jeder Seite eingefügt werden. Wenn
   Sie Javascript nicht mögen, können Sie die Ausgabe in
   'debug.tpl' selbst definieren. Debug-Ausgaben werden nicht gecached
   und Informationen zu 'debug.tpl' selbst werden nicht ausgegeben.
  </para>
 </note>
 <note>
  <para>
   Die Ladezeiten werden in Sekunden, oder Bruchteilen davon, angegeben.
  </para>
 </note>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
