<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
<!-- EN-Revision: 1.5 Maintainer: yannick Status: ready -->

<refentry id="api.register.resource">
 <refnamediv>
  <refname>register_resource()</refname>
  <refpurpose>Déclare dynamiquement une ressource plugin</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>void</type><methodname>register_resource</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam><type>array</type><parameter>resource_funcs</parameter></methodparam>
  </methodsynopsis>
  <para>
   Utilisée pour déclarer dynamiquement une <link linkend="template.resources">ressource plugin</link>
   dans Smarty. Il faut passer en paramètre le nom de la ressource
   et le tableau des fonctions PHP qui l'implémentent. Reportez-vous
   à la section <link linkend="template.resources">ressources templates</link>
   pour avoir plus d'informations sur la façon de paramétrer une fonction
   récupérant des templates.
  <note>
   <title>Note technique</title>
   <para>
    Un nom de ressource doit être composé d'au moins deux caractères.
    Les noms de ressources d'un seul caractère seront ignorés et utilisés
    comme étant une partie du chemin du fichier, comme avec 
    $smarty->display('c:/path/to/index.tpl');
   </para>
  </note>

   </para>

  <itemizedlist>
  <listitem><para>
   Le tableau de fonctions PHP <parameter>resource_funcs</parameter>
   doit être composé de 4 ou 5 éléments.
   </para></listitem>
   <listitem><para>
   S'il est composé de 4 éléments,
   les éléments seront les noms de fonctions pour, respectivement,
   <literal>source</literal>, <literal>timestamp</literal>, <literal>secure</literal> et
   <literal>trusted</literal> de la ressource.
   </para></listitem>
   <listitem><para>
   S'il est composé de 5 éléments, le premier élément devra être une
   référence sur un objet ou le nom d'une classe de l'objet ou une classe
   implémentant la ressource et les 4 éléments suivants doivent être
   les noms des méthodes implémentant <literal>source</literal>,
   <literal>timestamp</literal>, <literal>secure</literal>
   et <literal>trusted</literal>.
  </para></listitem>
  </itemizedlist>

  <example>
   <title>Exemple avec register_resource()</title>
   <programlisting role="php">
<![CDATA[
<?php
$smarty->register_resource('db', array(
                          'db_get_template',
                          'db_get_timestamp',
                          'db_get_secure',
                          'db_get_trusted')
                          );
?>
]]>
   </programlisting>
  </example>
  <para>
   Voir aussi
   <link linkend="api.unregister.resource"><varname>unregister_resource()</varname></link> et
   les <link linkend="template.resources">ressources de template</link>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->