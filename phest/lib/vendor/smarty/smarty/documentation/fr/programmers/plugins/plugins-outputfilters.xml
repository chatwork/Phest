<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
<!-- EN-Revision: 1.3 Maintainer: yannick Status: ready -->

<sect1 id="plugins.outputfilters">
 <title>Filtres de sortie</title>
 <para>
  Les plugins de filtres de sortie opèrent sur la sortie du template,
  après que le template a été chargé et exécuté, mais avant que
  la sortie ne soit affichée.
 </para>
 <funcsynopsis>
  <funcprototype>
   <funcdef>string <function>smarty_outputfilter_<replaceable>name</replaceable></function></funcdef>
   <paramdef>string <parameter>$template_output</parameter></paramdef>
   <paramdef>object <parameter>&amp;$smarty</parameter></paramdef>
  </funcprototype>
 </funcsynopsis>
 <para>
  Le premier paramètre passé à la fonction du filtre de sortie est la
  sortie du template qui doit être modifiée et le second paramètre
  est l'instance de Smarty appelant le plugin. Le plugin est supposé
  faire un traitement et en retourner le résultat.
 </para>
 <example>
  <title>Plugin de filtre de sortie</title>
  <programlisting role="php">
<![CDATA[
<?php
/*
 * Smarty plugin
 * -------------------------------------------------------------
 * Fichier :  outputfilter.protect_email.php
 * Type :     filtre de sortie
 * Nom :      protect_email
 * Rôle:     Convertie les @ en %40 pour protéger des 
 *           robots spammers.
 * -------------------------------------------------------------
 */
function smarty_outputfilter_protect_email($output, &$smarty)
{
     return preg_replace('!(\S+)@([a-zA-Z0-9\.\-]+\.([a-zA-Z]{2,3}|[0-9]{1,3}))!',
                         '$1%40$2', $output);
}
?>
]]>
  </programlisting>
 </example>
 <para>
  Voir aussi
  <link linkend="api.register.outputfilter">
  <varname>register_outputfilter()</varname></link> et
  <link linkend="api.unregister.outputfilter">
  <varname>unregister_outputfilter()</varname></link>.
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
