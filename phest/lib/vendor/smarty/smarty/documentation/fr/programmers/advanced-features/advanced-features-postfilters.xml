<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
<!-- EN-Revision: 1.7 Maintainer: yannick Status: ready -->

<sect1 id="advanced.features.postfilters">
 <title>Filtres de post-compilation</title>
 <para>
  Les filtres de post-compilation sont des fonctions PHP que vos templates
  exécutent <emphasis>après avoir été compilés</emphasis>. Les filtres de post-compilation
  peuvent  être soit <link linkend="api.register.postfilter">déclarés</link>, soit chargés
  depuis les <link linkend="variable.plugins.dir">répertoires des plugins</link>
  en utilisant la fonction
  <link linkend="api.load.filter"><varname>load_filter()</varname></link> ou en réglant
  la variable
  <link linkend="variable.autoload.filters"><parameter>$autoload_filters</parameter></link>.
  Smarty passera le template compilé en tant que premier paramètre et attendra
  de la fonction qu'elle retourne le résultat de l'exécution.
 </para>
 <example>
  <title>Utilisation d'un filtre de post-compilation de templates</title>
  <programlisting role="php">
<![CDATA[
<?php
// mettez celà dans votre application
function add_header_comment($tpl_source, &$smarty)
{
    return "<?php echo \"<!-- Créé par Smarty ! -->\n\"; ?>\n".$tpl_source;
}

// enregistre le filtre de post-compilation
$smarty->register_postfilter('add_header_comment');
$smarty->display('index.tpl');
?>
]]>
  </programlisting>
  <para>
   Votre template Smarty <filename>index.tpl</filename> ressemblera, après compilation à :
  </para>
  <screen>
<![CDATA[
<!-- Créé par Smarty ! -->
{* reste du contenu du template... *}
]]>
  </screen>
 </example>
 <para>
  Voir aussi
  <link linkend="api.register.postfilter"><varname>register_postfilter()</varname></link>,
  <link linkend="advanced.features.prefilters">les pré-filtres</link> et
  <link linkend="api.load.filter"><varname>load_filter()</varname></link>.
 </para>
</sect1>

 <!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 indent-tabs-mode:nil
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->