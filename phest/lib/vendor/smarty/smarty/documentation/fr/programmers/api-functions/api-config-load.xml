<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
<!-- EN-Revision: 1.5 Maintainer: yannick Status: ready -->

<refentry id="api.config.load">
 <refnamediv>
  <refname>config_load()</refname>
  <refpurpose>Charge les données d'un fichier de configuration et les assigne au template</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>void</type><methodname>config_load</methodname>
   <methodparam><type>string</type><parameter>file</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>section</parameter></methodparam>
  </methodsynopsis>
  <para>
   Utilisée pour charger des données d'un <link linkend="config.files">fichier
   de configuration</link> et les assigner a un template. Cette fonction fonctionne
   exactement comme la fonction de template <link
   linkend="language.function.config.load"><varname>{config_load}</varname></link>.
  </para>
  <note>
   <title>Note technique</title>
   <para>
    Comme pour Smarty 2.4.0, les variables de templates assignées
    sont conservées entre chaque appel à 
    <link linkend="api.fetch"><varname>fetch()</varname></link> et 
    <link linkend="api.display"><varname>display()</varname></link>.
    Les variables de configuration chargées avec <varname>config_load()</varname> sont
    globales. Les fichiers de configuration sont aussi compilés pour une
    exécution plus rapide et respecte les réglages de <link
    linkend="variable.force.compile"><parameter>$force_compile</parameter></link> et de <link
    linkend="variable.compile.check"><parameter>$compile_check</parameter></link>.
   </para>
  </note>
  <example>
   <title>Exemple avec config_load()</title>
   <programlisting role="php">
<![CDATA[
<?php
// charge les variables de configuration et les assigne
$smarty->config_load('my.conf');

// charge une section
$smarty->config_load('my.conf','foobar');
?>
]]>
   </programlisting>
  </example>
  <para>
   Voir aussi
   <link linkend="language.function.config.load"><varname>{config_load}</varname></link>,
   <link linkend="api.get.config.vars"><varname>get_config_vars()</varname></link>,
   <link linkend="api.clear.config"><varname>clear_config()</varname></link> et les
   <link linkend="language.config.variables">variables de configuration</link>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->