<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
<!-- EN-Revision: 1.5 Maintainer: yannick Status: ready -->

<sect1 id="advanced.features.prefilters">
 <title>Filtres de pré-compilation</title>
 <para>
  Les filtres de pré-compilation sont des fonctions PHP que vos templates
  exécutent <emphasis>avant qu'ils ne soient compilés</emphasis>. Celà peut être utile
  pour pré-traiter vos templates afin d'enlever les commentaires
  inutiles, garder un oeil sur ce que les gens mettent dans leurs templates, etc.
 </para>
 <para>
  Les filtre de pré-compilations peuvent être soit
  <link linkend="api.register.prefilter">déclarés</link>, soit chargés
  à partir des <link linkend="variable.plugins.dir">répertoires de plugins</link>
  en utilisant la fonction <link linkend="api.load.filter"><varname>load_filter()</varname></link> ou
  en réglant la variable
  <link linkend="variable.autoload.filters"><parameter>$autoload_filters</parameter></link>.
 </para>
 <para>
  Smarty passera à la fonction le code source en tant que premier argument,
  et attendra en retour le code modifié.
 </para>
 <example>
  <title>Utilisation un filtre de pré-compilation de template</title>
  <para>
   Ceci va effacer tous les commentaires de la source du template.
  </para>
  <programlisting>
<![CDATA[
<?php
// mettre ceci dans votre application
function remove_dw_comments($tpl_source, &$smarty)
{
    return preg_replace("/<!--#.*-->/U",'',$tpl_source);
}

// enregistrer le filtre de pré-compilation
$smarty->register_prefilter('remove_dw_comments');
$smarty->display('index.tpl');
?>
]]>
  </programlisting>
 </example>
 <para>
  Voir aussi
  <link linkend="api.register.prefilter"><varname>register_prefilter()</varname></link>,
  les <link linkend="advanced.features.postfilters">post-filtres</link> et
  <link linkend="api.load.filter"><varname>load_filter()</varname></link>.
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->