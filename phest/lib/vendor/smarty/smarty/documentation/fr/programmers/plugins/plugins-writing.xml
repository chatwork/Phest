<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
<!-- EN-Revision: 1.3 Maintainer: yannick Status: ready -->

<sect1 id="plugins.writing">
 <title>Ecrire des plugins</title>
 <para>
  Les plugins peuvent être soit chargés automatiquement par Smarty
  depuis le système de fichier, soit être déclarés
  pendant l'exécution via une fonction register_* de l'API. Ils peuvent
  aussi être désalloués en utilisant une fonction unregister_* de
  l'API.
 </para>
 <para>
  Pour les plugins qui ne sont pas enregistrés pendant l'exécution, le nom
  des fonctions n'ont pas à suivre la convention de nommage.
 </para>
 <para>
  Si certaines fonctionnalités d'un plugin dépendent d'un autre plugin
  (comme c'est le cas de certains plugins accompagnant Smarty), alors 
  la maniére appropriée de charger le plugin est la suivante :
 </para>
 <programlisting role="php">
<![CDATA[
<?php
require_once $smarty->_get_plugin_filepath('function', 'html_options');
?>
]]>
 </programlisting>
 <para>
  Une règle générale est que chaque objet Smarty est toujours passé au plugin
  en tant que dernier paramètre, sauf pour deux exceptions :
 </para>
 <itemizedlist>
 <listitem><para>
   les modificateurs ne sont pas passés du tout à l'objet Smarty
 </para></listitem>
 <listitem><para>
   les blocs récupèrent le paramètre
 <parameter>$repeat</parameter> passé après l'objet Smarty afin de
 conserver une compatibilité avec les anciennes versions de Smarty.
 </para></listitem>
 </itemizedlist>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->