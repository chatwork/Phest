<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
<!-- EN-Revision: 1.7 Maintainer: yannick Status: ready -->

<!ENTITY note.parameter.merge '<note>
 <title>Note technique</title>
 <para>
  Le paramètre <parameter>merge</parameter> respecte les clés du tableau,
  donc, si vous fusionnez deux tableaux indexés numériquement, ils peuvent
  se recouvrir les uns les autres ou aboutir à des clés non séquentielles. Ceci
  est différent de la fonction PHP <ulink url="&url.php-manual;array_merge">array_merge()</ulink> 
  qui élimine des clés numériques et les renumérote.
 </para>
</note>'>

<!ENTITY parameter.compileid '<para>
En tant que troisième paramètre optionnel, vous pouvez passer un
identifiant de compilation <parameter>$compile_id</parameter>.
C&#39;est au cas où vous voudriez compiler plusieurs versions du
même template, par exemple, pour avoir des templates compilés
pour différents langages. Une autre utilité pour l&#39;identifiant de compilation
<parameter>$compile_id</parameter> est lorsque vous utilisez plus d&#39;un
<link linkend="variable.template.dir"><parameter>$template_dir</parameter></link> mais
seulement un <link linkend="variable.compile.dir"><parameter>$compile_dir</parameter></link>.
Définissez un <parameter>$compile_id</parameter>
séparé pour chaque
<link linkend="variable.template.dir"><parameter>$template_dir</parameter></link>,
sinon, les templates du même nom s&#39;effaceront. Vous pouvez également
définir la variable <link linkend="variable.compile.id">$compile_id</link> une seule 
fois plutôt que de la passer à chaque appel à la fonction.</para>'>

<!ENTITY api.register.snippet '<para>
   La fonction PHP de callback <parameter>function</parameter> peut être soit :
   <itemizedlist>
       <listitem><para>
       Une chaîne de caractères contenant la fonction <parameter>name</parameter>
       </para></listitem>

       <listitem><para>
       Un tableau sous la forme <literal>array(&amp;$object, $method)</literal> où
       <literal>&amp;$object</literal> est une référence d&#39;objet et
       <literal>$method</literal> une chaîne contenant le nom de la méthode
       </para></listitem>

       <listitem><para>
       Un tableau sous la forme
       <literal>array($class, $method)</literal> où
       <literal>$class</literal> est le nom de la classe et
       <literal>$method</literal> est une méthode de la classe.
       </para></listitem>
   </itemizedlist>
  </para>'>
