<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
<!-- EN-Revision: 1.15 Maintainer: gerald Status: ready -->

<sect1 id="language.function.capture">
 <title>{capture}</title>

 <para>
  <varname>{capture}</varname> est utilisé pour récupérer la sortie d'éléments dans
  une variable au lieu de les afficher. Tout contenu situé entre
  <varname>{capture name='foo'}</varname> et <varname>{/capture}</varname>
  est intercepté dans une variable dont le nom est spécifié dans l'attribut
  <parameter>name</parameter>.
 </para>
 <para>
  Le contenu capturé peut être utilisé dans
  le template par l'intermédiaire de la variable spéciale
  <link linkend="language.variables.smarty.capture"><parameter>$smarty.capture.foo</parameter></link>
  où <quote>foo</quote> est la valeur de l'attribut <parameter>name</parameter>.
  Si vous ne donnez pas de valeur à l'attribut <parameter>name</parameter>, alors
  <quote>default</quote> est utilisé en tant que nom, i.e.
  <parameter>$smarty.capture.default</parameter>.
 </para>
 <para>
  <varname>{capture}</varname> peut être imbriqué.
 </para>

 <informaltable frame="all">
  <tgroup cols="5">
   <colspec colname="param" align="center" />
   <colspec colname="type" align="center" />
   <colspec colname="required" align="center" />
   <colspec colname="default" align="center" />
   <colspec colname="desc" />
   <thead>
    <row>
     <entry>Attribut</entry>
     <entry>Type</entry>
     <entry>Requis</entry>
     <entry>Defaut</entry>
     <entry>Description</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>name</entry>
     <entry>string</entry>
     <entry>non</entry>
     <entry><emphasis>default</emphasis></entry>
     <entry>Le nom du bloc capturé</entry>
    </row>
    <row>
     <entry>assign</entry>
     <entry>string</entry>
     <entry>non</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>Le nom de la variable à laquelle la sortie sera assignée</entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>
 <note>
 <title>Attention</title>
  <para>
   Faîtes attention lorsque vous interceptez la sortie de commandes
   <link linkend="language.function.insert"><varname>{insert}</varname></link>.
   Si vous avez configuré le <link linkend="caching">cache</link> pour que ce
   dernier soit actif, et que vous avez des commandes <link
   linkend="language.function.insert"><varname>{insert}</varname></link>
   supposées s'exécuter dans un contenu en cache, ne tentez pas de capturer
   ce contenu.
  </para>
</note>
 <para>
  <example>
   <title>{capture} avec le nom de l'attribut</title>
   <programlisting>
<![CDATA[
{* nous ne voulons afficher une balise div que si le contenu est affiché. *}
{capture name=banner}
  {include file='get_banner.tpl'}
{/capture}
{if $smarty.capture.banner ne ""}
<div id="banner">{$smarty.capture.banner}</div>
{/if}
]]>
   </programlisting>
  </example>

  <example>
   <title>{capture} dans une variable de template</title>
   <para>Cet exemple démontre également la fonction
    <link linkend="language.function.popup"><varname>{popup}</varname></link>
   </para>
   <programlisting>
<![CDATA[
{capture name=some_content assign=popText}
Le serveur est {$smarty.server.SERVER_NAME|upper} sur {$smarty.server.SERVER_ADDR}<br>
Votre IP est {$smarty.server.REMOTE_ADDR}.
{/capture}
<a href="#" {popup caption='Information sur le serveur' text=$popText}>Aide</a>
]]>
   </programlisting>
  </example>

 </para>
 <para>
  Voir aussi
  <link linkend="language.variables.smarty.capture"><parameter>$smarty.capture</parameter></link>,
  <link linkend="language.function.eval"><varname>{eval}</varname></link>,
  <link linkend="language.function.fetch"><varname>{fetch}</varname></link>,
  <link linkend="api.fetch"><varname>fetch()</varname></link> et
  <link linkend="language.function.assign"><varname>{assign}</varname></link>.
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->