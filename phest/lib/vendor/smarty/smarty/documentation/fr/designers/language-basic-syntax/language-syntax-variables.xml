<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 2972 $ -->
<!-- EN-Revision: 1.15 Maintainer: yannick Status: ready -->

<sect1 id="language.syntax.variables">
 <title>Variables</title>
 <para>
  Les variables de template commence par un signe dollar (<literal>$</literal>).
  Elles peuvent contenir des nombres, des lettres et des underscores, tout
  comme une <ulink url="&url.php-manual;language.variables">variable PHP</ulink>.
  Vous pouvez référencer des tableaux indexés
  numériquement ou non. Vous pouvez aussi référencer des propriétés d'objet
  ainsi que des méthodes.
 </para>
 <para>
  Les <link linkend="language.config.variables">variables des fichiers de
  configuration</link> sont une exception à la synthaxe utilisant un signe dollar. Elles peuvent être
  référencées en les entourant du signe dièse (<literal>#</literal>) ou via la variable spéciale
  <link linkend="language.variables.smarty.config"><parameter>$smarty.config</parameter></link>.
 </para>
 <example>
  <title>Variables</title>
  <programlisting>
<![CDATA[
{$foo}        <-- affiche une variable simple (qui n'estpas un tableau ou un objet)
{$foo[4]}     <-- affiche le 5ème élément d'un tableau indexé
{$foo.bar}    <-- affiche la clé "bar" d'un tableau, identique à $foo['bar'] en PHP
{$foo.$bar}   <-- affiche la valeur de la clé d'un tableau, identique à $foo[$bar] en PHP
{$foo->bar}   <-- affiche la propriété "bar" de l'objet
{$foo->bar()} <-- affiche la valeur retournée de la méthode "bar" de l'objet
{#foo#}       <-- affiche la variable du fichier de configuration "foo"
{$smarty.config.foo} <-- synonyme pour {#foo#}
{$foo[bar]}   <-- synthaxe uniquement valide dans une section de boucle, voir {section}
{assign var=foo value='baa'}{$foo} <--  affiche "baa", voir {assign}

Plusieurs autres combinaisons sont autorisées

{$foo.bar.baz}
{$foo.$bar.$baz}
{$foo[4].baz}
{$foo[4].$baz}
{$foo.bar.baz[4]}
{$foo->bar($baz,2,$bar)} <-- passage de paramètres
{"foo"}       <-- les valeurs statiques sont autorisées

{* affiche la variable serveur "SERVER_NAME" ($_SERVER['SERVER_NAME'])*}
{$smarty.server.SERVER_NAME}
]]>
  </programlisting>
 </example>

 <para>
  Les variables spéciales comme <literal>$_GET</literal>, <literal>$_SESSION</literal>, etc.
  sont également disponibles, lisez le chapitre sur les variables réservées
  <emphasis><link linkend="language.variables.smarty"><parameter>$smarty</parameter></link></emphasis>
  pour plus de détails.
 </para>

 <para>
  Voir aussi
  <link linkend="language.variables.smarty"><parameter>$smarty</parameter></link>,
  les <link linkend="language.config.variables">variables de configuration</link>,
  <link linkend="language.function.assign"><varname>{assign}</varname></link> et
  <link linkend="api.assign"><varname>assign()</varname></link>.
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->