<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 4715 $ -->
<!-- EN-Revision: 4278 Maintainer: takagi Status: ready -->
<sect1 id="advanced.features.template.inheritance">
 <title>テンプレートの継承</title>
 <para>
  継承機能は、オブジェクト指向プログラミングの考え方をテンプレートに導入したものです。
  これを使うと、ひとつあるいは複数の基底テンプレートを継承して子テンプレートを作ることができます。
  継承とは、子テンプレートが親の名前付きブロックをオーバーライドできるということです。
 </para>

  <itemizedlist>
    <listitem><para>
      継承ツリーは好きなだけ深くすること (つまり、あるファイルを継承したファイルを継承したファイルを…
      ということ) ができます。
    </para></listitem>
    <listitem><para>
      子テンプレートでは、オーバーライドした <link linkend="language.function.block"><varname>{block}</varname></link>
      タグの内部のコンテンツ以外を変更することはできません。
      <link linkend="language.function.block"><varname>{block}</varname></link>
      タグの外側に書いた内容は削除されます。
    </para></listitem>
    <listitem><para>
      子テンプレートと親テンプレートの <link linkend="language.function.block"><varname>{block}</varname></link>
      タグの内容をマージすることができます。その場合は、
      <link linkend="language.function.block"><varname>{block}</varname></link> タグのオプションのフラグ
      <literal>append</literal> あるいは <literal>prepend</literal> と、プレースホルダ
      <literal>{$smarty.block.parent}</literal> あるいは <literal>{$smarty.block.child}</literal> を使います。
    </para></listitem>
    <listitem><para>
      テンプレートの継承はコンパイル時に行われ、コンパイル後はひとつのテンプレートファイルになります。
      子テンプレートを使う手法のひとつである <link linkend="language.function.include"><varname>{include}</varname></link>
      タグによるインクルードと比べて、レンダリング時のパフォーマンスがはるかに優れています。
    </para></listitem>
    <listitem><para>
      子テンプレートが親テンプレートを継承するときには
      <link linkend="language.function.extends"><varname>{extends}</varname></link>
      タグを使います。このタグは、子テンプレートの最初の行になければなりません。
      テンプレートファイルで <link linkend="language.function.extends"><varname>{extends}</varname></link>
      タグを使う方法のほかに、PHP スクリプト側でテンプレートの継承ツリー全体を定義することもできます。
      その場合は、<link linkend="api.fetch"><varname>fetch()</varname></link> あるいは
      <link linkend="api.display"><varname>display()</varname></link> をコールするときに
      テンプレートリソース型 <literal>extends:</literal> を使います。
      後者の方法のほうが柔軟性があります。
    </para></listitem>
  </itemizedlist>
  <note><para>
    <parameter>$compile_check</parameter> が有効な場合は、起動するたびに
    継承ツリーの全ファイルの更新チェックを行います。そのため、実際の運用時には
    <parameter>$compile_check</parameter> を無効にするとよいでしょう。
  </para></note>
  <note><para>
    <link linkend="language.function.include"><varname>{include}</varname></link>
    でインクルードしたテンプレートに
    <link linkend="language.function.block"><varname>{block}</varname></link>
    エリアが含まれている場合にそれが正しく機能するのは、
    <link linkend="language.function.include"><varname>{include}</varname></link>
    自身がそれを囲む <link linkend="language.function.block"><varname>{block}</varname></link>
    の中でコールされたときだけです。最終的な親テンプレートには、ダミーの
    <link linkend="language.function.block"><varname>{block}</varname></link>
    が必要になるでしょう。
  </para></note>
  
 <example>
  <title>テンプレートの継承の例</title>
  <para>layout.tpl (親)</para>
  <programlisting>
<![CDATA[
<html>
<head>
  <title>{block name=title}Default Page Title{/block}</title>
  {block name=head}{/block}
</head>
<body>
{block name=body}{/block}
</body>
</html>
]]>
  </programlisting>
   <para>myproject.tpl (子)</para>
   <programlisting>
<![CDATA[
{extends file='layout.tpl'}
{block name=head}
  <link href="/css/mypage.css" rel="stylesheet" type="text/css"/>
  <script src="/js/mypage.js"></script>
{/block}
]]>

  </programlisting>
   <para>mypage.tpl (孫)</para>
   <programlisting>
<![CDATA[
{extends file='myproject.tpl'}
{block name=title}My Page Title{/block}
{block name=head}
  <link href="/css/mypage.css" rel="stylesheet" type="text/css"/>
  <script src="/js/mypage.js"></script>
{/block}
{block name=body}My HTML Page Body goes here{/block}
]]>
  </programlisting>
   <para>これらをレンダリングするには、次のようにします。</para>
<programlisting role="php">
<![CDATA[
 $smarty->display('mypage.tpl');
]]>
</programlisting> 
  <para>結果は、このようになります。</para>
  <programlisting>
<![CDATA[
<html>
<head>
  <title>My Page Title</title>
  <link href="/css/mypage.css" rel="stylesheet" type="text/css"/>
  <script src="/js/mypage.js"></script>
</head>
<body>
My HTML Page Body goes here
</body>
</html>]]>
</programlisting> 
</example>

  <example>
    <title>テンプレートリソース <literal>extends:</literal> による継承</title>
    <para>
      テンプレートファイルで <link linkend="language.function.extends"><varname>{extends}</varname></link>
      タグを使うかわりに、PHP スクリプトの中でリソース型
      <link linkend="resources.extends"><literal>extends:</literal></link>
      を使って継承ツリーを定義することもできます。
    </para>
    <para>
      次のコードは、先ほどの例と同じ結果を返します。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$smarty->display('extends:layout.tpl|myproject.tpl|mypage.tpl'); 
?>
]]>
   </programlisting>
  </example>
 <para>
  <link linkend="language.function.block"><varname>{block}</varname></link>、
   <link linkend="language.function.extends"><varname>{extends}</varname></link>
   および
   <link linkend="resources.extends"><literal>extends:</literal> リソース</link>
   も参照ください。
 </para> 
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
