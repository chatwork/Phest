<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 4710 $ -->
<!-- EN-Revision: 3842 Maintainer: takagi Status: ready -->
<!-- CREDITS: mat-sh,daichi,joe -->
<refentry id="api.assign">
 <refnamediv>
  <refname>assign()</refname>
  <refpurpose>テンプレートに値/オブジェクトを割り当てます。</refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <methodsynopsis>
   <type>void</type><methodname>assign</methodname>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>void</type><methodname>assign</methodname>
   <methodparam><type>string</type><parameter>varname</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>nocache</parameter></methodparam>
  </methodsynopsis>
  <para>
   テンプレート変数名/値のペアを明示的に指定するか、それらが格納された連想配列を指定します。
  </para>
  <para>
   オプションの三番目のパラメータ <parameter>nocache</parameter> に &true; を渡すと、
   キャッシュしない変数として代入します。詳細は
   <link linkend="cacheability.variables"><parameter>変数のキャッシュ機能</parameter></link> を参照ください。
  </para>
  <note><para>
    オブジェクトをテンプレートに代入/登録するときは、
    テンプレートからアクセスするプロパティやメソッドは表示に関する目的でだけ使うようにしましょう。
    オブジェクトを通じてアプリケーションのロジックを取り込むのは簡単ですが、
    それはまずい設計につながり、管理しづらくなってしまいます。
    Smarty ウェブサイトのベストプラクティスのページも参照ください。
  </para></note>    
  
  <example>
   <title>assign()</title>
<programlisting role="php">
<![CDATA[
<?php
// 名前/値のペアを渡します
$smarty->assign('Name', 'Fred');
$smarty->assign('Address', $address);

// 連想配列を渡します
$smarty->assign(array('city' => 'Lincoln', 'state' => 'Nebraska'));

// 配列を渡します
$myArray = array('no' => 10, 'label' => 'Peanuts');
$smarty->assign('foo',$myArray);

// データベース (例: adodb) の行を渡します
$sql = 'select id, name, email from contacts where contact ='.$id;
$smarty->assign('contact', $db->getRow($sql));
?>
]]>
</programlisting>
   <para>
   テンプレートの内容
   </para>
<programlisting>
<![CDATA[
{* 変数は、php と同様に大文字小文字を区別することに注意しましょう *}
{$Name}
{$Address}
{$city}
{$state}

{$foo.no}, {$foo.label}
{$contact.id}, {$contact.name},{$contact.email}
]]>
</programlisting>
  </example>
  <para>
  より複雑な配列の割り当てに関しては、
  <link linkend="language.function.foreach"><varname>{foreach}</varname></link>
  および
  <link linkend="language.function.section"><varname>{section}</varname></link>
  を参照してください。
  </para>

  <para>
 <link linkend="api.assign.by.ref"><varname>assignByRef()</varname></link>、
 <link linkend="api.get.template.vars"><varname>getTemplateVars()</varname></link>、
 <link linkend="api.clear.assign"><varname>clearAssign()</varname></link>、
 <link linkend="api.append"><varname>append()</varname></link>
 および
 <link linkend="language.function.assign"><varname>{assign}</varname></link>
 も参照してください。
 </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
