<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 4717 $ -->
<!-- EN-Revision: 4278 Maintainer: takagi Status: ready -->
<!-- CREDITS: mat-sh,daichi,joe -->
   <sect1 id="plugins.functions"><title>テンプレート関数プラグイン</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>smarty_function_<replaceable>name</replaceable></function></funcdef>
      <paramdef>array <parameter>$params</parameter></paramdef>
      <paramdef>object <parameter>$template</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     テンプレートからテンプレート関数に渡された全ての
     <link linkend="language.syntax.attributes">属性</link> は、
     連想配列として <parameter>$params</parameter> に格納されます。
    </para>
    <para>
     関数の出力（戻り値）はテンプレート関数のタグの部分と置き換えられます(例:
     <link linkend="language.function.fetch"><varname>{fetch}</varname></link>
     関数)。 あるいは何も出力せずに単に他のタスクを実行する事ができます(例:
     <link linkend="language.function.assign">
     <varname>{assign}</varname></link> 関数)。
    </para>
    <para>
     関数によっていくつかの変数をテンプレートに割り当てる必要がある、
     もしくは Smarty に提供された他の機能を使う必要がある場合は、
     提供された <parameter>$template</parameter> オブジェクトを使用して
     <literal>$template->foo()</literal> のようにします。
    </para>

    <para>
     <example>
      <title>出力ありのテンプレート関数プラグイン</title>
      <programlisting role="php">
<![CDATA[
<?php
/*
 * Smarty plugin
 * -------------------------------------------------------------
 * File:     function.eightball.php
 * Type:     function
 * Name:     eightball
 * Purpose:  ランダムに回答を出力する
 * -------------------------------------------------------------
 */
function smarty_function_eightball($params, Smarty_Internal_Template $template)
{
    $answers = array('はい',
                     'いいえ',
                     'わかりません',
                     '可能性は低い',
                     '今は答えられません',
                     '実はもう実現しているのかも……');

    $result = array_rand($answers);
    return $answers[$result];
}
?>
]]>
</programlisting>
     </example>
    </para>
    <para>
     次のようにテンプレートで使用する事ができます。
    </para>
    <programlisting>
質問: 将来、タイムトラベルは実現可能でしょうか?
答え: {eightball}.
    </programlisting>
    <para>
     <example>
      <title>出力なしのテンプレート関数プラグイン</title>
      <programlisting role="php">
<![CDATA[
<?php
/*
 * Smarty plugin
 * -------------------------------------------------------------
 * File:     function.assign.php
 * Type:     function
 * Name:     assign
 * Purpose:  テンプート変数に値を割り当てる
 * -------------------------------------------------------------
 */
function smarty_function_assign($params, Smarty_Internal_Template $template)
{
    if (empty($params['var'])) {
        trigger_error("assign: パラメータ 'var' がありません");
        return;
    }

    if (!in_array('value', array_keys($params))) {
        trigger_error("assign: パラメータ 'value' がありません");
        return;
    }

    $template->assign($params['var'], $params['value']);     
    
}
?>
]]>
      </programlisting>
     </example>
    </para>
        <para>
     <link linkend="api.register.plugin"><varname>registerPlugin()</varname></link> および
     <link linkend="api.unregister.plugin"><varname>unregisterPlugin()</varname></link>
     も参照ください。
    </para>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
