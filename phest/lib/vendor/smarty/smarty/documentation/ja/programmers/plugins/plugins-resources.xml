<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 4717 $ -->
<!-- EN-Revision: 4278 Maintainer: takagi Status: ready -->
<!-- CREDITS: mat-sh,daichi,joe -->
   <sect1 id="plugins.resources"><title>リソースプラグイン</title>
    <para>
     リソースプラグインは、テンプレートソースやPHPスクリプトのコンポーネントを
     Smarty に提供する一般的な方法と意図されています
     （例： データベース, LDAP, 共有メモリ, ソケット等）。
    </para>

	<para>
	  カスタムリソースは、<literal>resource.foobarxyz.php</literal> 形式のファイル名で
	  <link linkend="variable.plugins.dir"><varname>$plugins_dir</varname></link> に置くか、
	  実行時に <link linkend="api.register.resource"><varname>registerResource()</varname></link> で登録します。
	  どちらの場合も、リソースにアクセスするにはテンプレートの前にリソース名を付けて
	  <literal>foobarxyz:yourtemplate.tpl</literal> のように指定します。
	</para>
	
	<para>
		リソースのテンプレートを Smarty のコンパイラにかけたくない場合は、
		<literal>Smarty_Resource_Uncompiled</literal> を継承したカスタムリソースを作りましょう。
 		この場合、リソースハンドラは <literal>renderUncompiled(Smarty_Internal_Template $_template)</literal> を実装する必要があります。
		<varname>$_template</varname> は現在のテンプレートへの参照で、すべての割り当てられた変数を含みます。
		この変数にアクセスするには、<literal>$_template->smarty->getTemplateVars()</literal> を使います。
		
		このリソースは、レンダリング結果を単純に出力ストリームに流すだけです。
		Smarty インスタンスを適切に設定しておけば、レンダリング結果を出力キャッシュすることもできあす。
		
		サンプルが <literal>libs/sysplugins/smarty_internal_resource_php.php</literal> にあります。
	</para>
	
	<para>
		リソースのコンパイル済みテンプレートをディスクにキャッシュしたくない場合は、
		<literal>Smarty_Resource_Recompiled</literal> を継承したカスタムリソースを作りましょう。
		このリソースは、アクセスのたびに毎回コンパイルされるようになります。オーバーヘッドが大きくなるかもしれません。
		
		サンプルが <literal>libs/sysplugins/smarty_internal_resource_eval.php</literal> にあります。
	</para>
	
    <example>
     <title>カスタムリソースの使用法</title>
     <programlisting role="php">
<![CDATA[
<?php

/**
 * MySQL リソース
 *
 * カスタム API によるリソースの実装例。ストレージリソースとして
 * MySQL を使い、Smarty のテンプレートや設定を格納します
 *
 * テーブル定義:
 * <pre>CREATE TABLE IF NOT EXISTS `templates` (
 *   `name` varchar(100) NOT NULL,
 *   `modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
 *   `source` text,
 *   PRIMARY KEY (`name`)
 * ) ENGINE=InnoDB DEFAULT CHARSET=utf8;</pre>
 *
 * デモデータ:
 * <pre>INSERT INTO `templates` (`name`, `modified`, `source`) VALUES ('test.tpl', "2010-12-25 22:00:00", '{$x="hello world"}{$x}');</pre>
 *
 * @package Resource-examples
 * @author Rodney Rehm
 */
class Smarty_Resource_Mysql extends Smarty_Resource_Custom {
    // PDO インスタンス
    protected $db;
    // 準備済みの fetch() ステートメント
    protected $fetch;
    // 準備済みの fetchTimestamp() ステートメント
    protected $mtime;

    public function __construct() {
        try {
            $this->db = new PDO("mysql:dbname=test;host=127.0.0.1", "smarty", "smarty");
        } catch (PDOException $e) {
            throw new SmartyException('Mysql Resource failed: ' . $e->getMessage());
        }
        $this->fetch = $this->db->prepare('SELECT modified, source FROM templates WHERE name = :name');
        $this->mtime = $this->db->prepare('SELECT modified FROM templates WHERE name = :name');
    }
    
    /**
     * テンプレートとその更新時刻をデータベースから取得する
     *
     * @param string $name テンプレート名
     * @param string $source テンプレートソース
     * @param integer $mtime テンプレートの更新時刻を表すタイムスタンプ
     * @return void
     */
    protected function fetch($name, &$source, &$mtime)
    {
        $this->fetch->execute(array('name' => $name));
        $row = $this->fetch->fetch();
        $this->fetch->closeCursor();
        if ($row) {
            $source = $row['source'];
            $mtime = strtotime($row['modified']);
        } else {
            $source = null;
            $mtime = null;
        }
    }
    
    /**
     * テンプレートの更新時刻をデータベースから取得する
     *
     * @note このメソッドの実装は必須ではありません。コンパイルしたテンプレートから読み込むよりも早く更新時刻が取得できそうなときだけ実装しましょう。
     * @param string $name テンプレート名
     * @return integer テンプレートの更新時刻を表すタイムスタンプ
     */
    protected function fetchTimestamp($name) {
        $this->mtime->execute(array('name' => $name));
        $mtime = $this->mtime->fetchColumn();
        $this->mtime->closeCursor();
        return strtotime($mtime);
    }
}


require_once 'libs/Smarty.class.php';
$smarty = new Smarty();
$smarty->registerResource('mysql', new Smarty_Resource_Mysql());

// PHP スクリプトのリソースを使います
$smarty->display("mysql:index.tpl");
?>
]]>
     </programlisting>
     <para>
      Smarty テンプレートはこのようになります。
     </para>
     <programlisting>
<![CDATA[
{include file='mysql:extras/navigation.tpl'}
]]>
     </programlisting>
    </example>

 <para>
 <link linkend="api.register.resource"><varname>registerResource()</varname></link>
 および
 <link linkend="api.unregister.resource"><varname>unregisterResource()</varname></link>
 も参照ください。
</para>

   </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
