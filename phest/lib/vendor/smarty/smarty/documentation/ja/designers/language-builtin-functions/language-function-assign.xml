<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 4711 $ -->
<!-- EN-Revision: 4508 Maintainer: takagi Status: ready -->
<sect1 id="language.function.assign">
 <title>{assign}</title>
  <para>
   <varname>{assign}</varname> は、テンプレート変数を
   <emphasis role="bold">テンプレートの実行時に</emphasis>
   代入します。
 </para>

 <note><para>
   テンプレート内で変数に代入するというのは、
   本質的にはアプリケーションのロジックをプレゼンテーションに持ち込んでいることになります。
   これは本来 PHP 側でやったほうがうまく処理できることでしょう。
   自己責任のもとで使いましょう。
 </para></note>

 <note><para>
    テンプレート変数を代入するときの
    <link linkend="language.function.shortform.assign"><varname>短縮形</varname></link>
    も参照ください。
 </para></note>

 <para><emphasis role="bold">属性</emphasis></para>
 <informaltable frame="all">
  <tgroup cols="5">
   <colspec colname="param" align="center" />
   <colspec colname="type" align="center" />
   <colspec colname="required" align="center" />
   <colspec colname="default" align="center" />
   <colspec colname="desc" />
   <thead>
    <row>
     <entry>属性名</entry>
     <entry>型</entry>
     <entry>必須</entry>
     <entry>デフォルト</entry>
     <entry>概要</entry>
    </row>
   </thead>
   <tbody>
    <row>
    <entry>var</entry>
    <entry>string</entry>
     <entry>Yes</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>代入される変数の名前</entry>
    </row>
    <row>
     <entry>value</entry>
     <entry>string</entry>
     <entry>Yes</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>代入される値</entry>
    </row>
    <row>
     <entry>scope</entry>
    <entry>string</entry>
     <entry>No</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>代入する変数のスコープ。'parent'、'root' あるいは 'global'</entry> 
    </row>
   </tbody>
  </tgroup>
 </informaltable>

 <para><emphasis role="bold">オプションのフラグ</emphasis></para>
 <informaltable frame="all">
  <tgroup cols="2">
   <colspec colname="param" align="center" />
   <colspec colname="desc" />
   <thead>
    <row>
     <entry>名前</entry>
     <entry>概要</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>nocache</entry>
     <entry>変数を 'nocache' 属性つきで代入する</entry>
    </row>    
   </tbody>
  </tgroup>
 </informaltable>
 
 <example>
  <title>{assign}</title>
  <programlisting>
<![CDATA[
{assign var="name" value="Bob"}
{assign "name" "Bob"} {* 短縮形 *}

The value of $name is {$name}.
]]>
  </programlisting>
  <para>
   上の例の出力は次のようになります。
  </para>
  <screen>
<![CDATA[
The value of $name is Bob.
]]>
  </screen>
 </example>
 
 <example>
  <title>nocache を指定した変数による {assign}</title>
  <programlisting>
<![CDATA[
{assign var="name" value="Bob" nocache}
{assign "name" "Bob" nocache} {* 短縮形 *}

The value of $name is {$name}.
]]>
  </programlisting>
  <para>
   上の例の出力は次のようになります。
  </para>
  <screen>
<![CDATA[
The value of $name is Bob.
]]>
  </screen>
 </example>
 
 <example>
  <title>計算結果の {assign}</title>
  <programlisting>
<![CDATA[
{assign var=running_total value=$running_total+$some_array[$row].some_value}
]]>
  </programlisting>

 </example>

<example>
  <title>呼び出し元テンプレートのスコープでの {assign}</title>
  <para>インクルードされたテンプレート内で代入した変数は、インクルードした側のテンプレートからも見えます。</para>
  <programlisting>
<![CDATA[
{include file="sub_template.tpl"}
...
{* サブテンプレートで代入した変数を表示します *}
{$foo}<br>
...
]]>
  </programlisting>
  <para>上のテンプレートでインクルードしている <filename>sub_template.tpl</filename> の例を次に示します。</para>
  <programlisting>
<![CDATA[
...
{* foo はインクルード元のテンプレートからも見えます *}
{assign var="foo" value="something" scope=parent}
{* bar はこのテンプレート内でしか見えません *}
{assign var="bar" value="value"}
...
]]>
</programlisting>
</example>
 
 <example>
  <title>現在のスコープツリーへの変数の {assign}</title>
  <para>現在のツリーのルートに変数を代入することができます。この変数は、同じツリーを使うすべてのテンプレートから見えるようになります。</para>
  <programlisting>
<![CDATA[
{assign var=foo value="bar" scope="root"}
]]>
  </programlisting>
  
 </example>
 
 <example>
  <title>グローバル変数の {assign}</title>
  <para>グローバル変数は、すべてのテンプレートから見えます。</para>
  <programlisting>
<![CDATA[
{assign var=foo value="bar" scope="global"}
{assign "foo" "bar" scope="global"} {* 短縮形 *}
]]>
  </programlisting>
  
 </example>
 
 <example>
  <title>{assign} された変数への PHP スクリプトからのアクセス</title>
  <para>
    <varname>{assign}</varname> した変数に PHP スクリプトからアクセスするには
    <link linkend="api.get.template.vars">
    <varname>getTemplateVars()</varname></link> を使います。
    このテンプレートでは、変数 <parameter>$foo</parameter> を作ります。
  </para>
<programlisting>
<![CDATA[
{assign var="foo" value="Smarty"}
]]>
</programlisting>
<para>テンプレート変数にアクセスできるのは、テンプレートの実行中か実行後のみです。
次のスクリプトのようになります。
</para>
<programlisting role="php">
<![CDATA[
<?php

// まだテンプレートを実行していないので、これは何も出力しません
echo $smarty->getTemplateVars('foo');

// テンプレートを変数に取り込みます
$whole_page = $smarty->fetch('index.tpl');

// テンプレートを実行した後なので、これは 'smarty' を出力します
echo $smarty->getTemplateVars('foo');

$smarty->assign('foo','Even smarter');

// これは 'Even smarter' を出力します
echo $smarty->getTemplateVars('foo');

?>
]]>
</programlisting>
 </example>


 <para>
 次にあげる関数にも、<emphasis>オプションで</emphasis>
 テンプレート変数を代入することができます。
  </para>

 <para>
  <link linkend="language.function.capture"><varname>{capture}</varname></link>,
  <link linkend="language.function.include"><varname>{include}</varname></link>,
  <link linkend="language.function.include.php"><varname>{include_php}</varname></link>,
  <link linkend="language.function.insert"><varname>{insert}</varname></link>,
 <link linkend="language.function.counter"><varname>{counter}</varname></link>,
 <link linkend="language.function.cycle"><varname>{cycle}</varname></link>,
 <link linkend="language.function.eval"><varname>{eval}</varname></link>,
 <link linkend="language.function.fetch"><varname>{fetch}</varname></link>,
 <link linkend="language.function.math"><varname>{math}</varname></link>,
 <link linkend="language.function.textformat"><varname>{textformat}</varname></link>
 </para>

 <para>
  <link linkend="language.function.shortform.assign"><varname>{$var=...}</varname></link>、
 <link linkend="api.assign"><varname>assign()</varname></link>
   および
  <link linkend="api.get.template.vars"><varname>getTemplateVars()</varname></link>
  も参照ください。
 </para>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
