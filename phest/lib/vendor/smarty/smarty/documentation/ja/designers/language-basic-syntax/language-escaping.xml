<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 3856 $ -->
<!-- EN-Revision: 3827 Maintainer: takagi Status: ready -->
<!-- CREDITS: mat-sh,daichi,joe -->
<sect1 id="language.escaping">
 <title>Smarty の構文解析を回避する</title>
 <para>
  時々、Smarty の構文解析の対象にしたくないと望む、
  もしくはそうする必要がある部分があります。 典型的な例としては、
  テンプレートに Javascript や CSS コードが含まれるときです。
  それらの言語が Smarty のデフォルトの
  <link linkend="language.function.ldelim">デリミタ</link>
  である { と } を使用するときに問題が発生します。
 </para>

 <note><para>
  もっとも単純な解決方法は、Javascript と CSS コードをそれぞれファイルに切り分け、
  それらにアクセスするために標準的な HTML の機能を使用する事で状況を回避する事です。
  これは、ブラウザのスクリプトキャッシュも利用します。
  Smarty の変数や関数を Javascript/CSS で使いたい場合は、次のようにします。
 </para></note>

 <para>
  Smarty のテンプレート内では、{ や } の両側に空白文字があればそれをデリミタとはみなしません。
  この挙動を無効にするには、Smarty のクラス変数 <link linkend="variable.auto.literal"><parameter>$auto_literal</parameter></link>
  を false にします。
 </para>
 
 <example>
  <title>自動リテラル機能の使用</title>
  <programlisting>
<![CDATA[
<script>
   // 次の波括弧は Smarty に無視されます
   // その両側に空白文字があるからです
   function foobar {
	alert('foobar!');
   }
   // こちらの場合はリテラルとして扱うエスケープが必要です
   {literal}
	function bazzy {alert('foobar!');}
   {/literal}
</script>
]]>  
 </programlisting>
 </example>
 
 <para>
  テンプレートロジックのブロックをエスケープするには <link
  linkend="language.function.literal">
  <varname>{literal}..{/literal}</varname></link> ブロックを使用します。
  HTML エンティティの使用法と同様に、 <link
  linkend="language.function.ldelim"><varname>{ldelim}</varname></link>、<link
  linkend="language.function.ldelim"><varname>{rdelim}</varname></link> あるいは <link
  linkend="language.variables.smarty.ldelim">
  <varname>{$smarty.ldelim}</varname>、<varname>{$smarty.rdelim}</varname></link>
  を使用してデリミタを個別にエスケープすることもできます。
 </para>

 <para>
  単純に Smarty の <link
  linkend="variable.left.delimiter">
  <parameter>$left_delimiter</parameter></link> および
  <link linkend="variable.right.delimiter">
  <parameter>$right_delimiter</parameter></link>
  を変更するだけでも便利になることが多々あります。
  <note>
    <para>
      デリミタの変更は、すべてのテンプレートの構文およびエスケープに影響を及ぼします。
      変更した後は、キャッシュやコンパイル済みファイルを一度削除するようにしましょう。
    </para>
  </note>
 </para>
 <example>
  <title>デリミタを変更する例</title>
  <programlisting role="php">
<![CDATA[
<?php

$smarty->left_delimiter = '<!--{';
$smarty->right_delimiter = '}-->';

$smarty->assign('foo', 'bar');
$smarty->assign('name', 'Albert');
$smarty->display('example.tpl');

?>
]]>
  </programlisting>
  <para>
   テンプレートはこのようになります。
  </para>
  <programlisting>
<![CDATA[
Welcome <!--{$name}--> to Smarty
<script language="javascript">
  var foo = <!--{$foo}-->;
  function dosomething() {
    alert("foo is " + foo);
  }
  dosomething();
</script>
]]>
  </programlisting>
 </example>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
