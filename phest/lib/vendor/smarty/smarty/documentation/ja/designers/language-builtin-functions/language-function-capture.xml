<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 3856 $ -->
<!-- EN-Revision: 3827 Maintainer: takagi Status: ready -->
<!-- CREDITS: mat-sh,daichi,joe -->
<sect1 id="language.function.capture">
 <title>{capture}</title>

  <para>
   <varname>{capture}</varname> は、タグの間のテンプレートの出力を集め、
   それをブラウザに表示する代わりに変数に受け渡します。
   <varname>{capture name='foo'}</varname> と <varname>{/capture}</varname>
   の間のあらゆるコンテンツは、<parameter>name</parameter>
   属性で指定した変数に格納されます。
   </para>
   <para>キャプチャされたコンテンツは、特別な変数
   <link linkend="language.variables.smarty.capture"><parameter>$smarty.capture.foo</parameter></link>
   (<quote>foo</quote> は <parameter>name</parameter> 属性で指定した変数) によって利用できます。
   <parameter>name</parameter> 属性を指定しない場合は <quote>default</quote>
   が使われ、<parameter>$smarty.capture.default</parameter>
   のようになります。
   </para>
   <para><varname>{capture}'s</varname> はネスト可能です。
   </para>


 <para><emphasis role="bold">属性</emphasis></para>
 <informaltable frame="all">
  <tgroup cols="5">
   <colspec colname="param" align="center" />
   <colspec colname="type" align="center" />
   <colspec colname="required" align="center" />
   <colspec colname="default" align="center" />
   <colspec colname="desc" />
   <thead>
    <row>
     <entry>属性名</entry>
     <entry>型</entry>
     <entry>必須</entry>
     <entry>デフォルト</entry>
     <entry>概要</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>name</entry>
    <entry>string</entry>
     <entry>Yes</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>キャプチャされるブロックの名前</entry>
    </row>
    <row>
     <entry>assign</entry>
     <entry>string</entry>
     <entry>No</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>キャプチャされた出力を割り当てるための変数名</entry>
    </row>
    <row>
     <entry>append</entry>
    <entry>string</entry>
     <entry>No</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>キャプチャされた出力を追記するための配列変数名</entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>
 
 <para><emphasis role="bold">オプションのフラグ</emphasis></para>
 <informaltable frame="all">
  <tgroup cols="2">
   <colspec colname="param" align="center" />
   <colspec colname="desc" />
   <thead>
    <row>
     <entry>名前</entry>
     <entry>概要</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>nocache</entry>
     <entry>キャプチャされたブロックのキャッシュを無効にする</entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>
 
 <note>
 <title>注意</title>
  <para>
   <link linkend="language.function.insert"><varname>{insert}</varname></link>
   の出力をキャプチャする際には注意が必要です。
   <link linkend="caching"><parameter>$caching</parameter></link>
   が有効の時に、実行したい
   <link linkend="language.function.insert"><varname>{insert}</varname></link>
   コマンドがもしキャッシュされたコンテンツ内にあるのなら、そのコンテンツはキャプチャされません。
  </para>
 </note>

 <para>
  <example>
   <title>name 属性を使用した {capture}</title>
   <programlisting>
<![CDATA[
{* コンテンツが表示されない限り、テーブルの行を表示しません *}
{capture name="banner"}
{capture "banner"} {* short-hand *}
  {include file="get_banner.tpl"}
{/capture}

{if $smarty.capture.banner ne ""}
<div id="banner">{$smarty.capture.banner}</div>
{/if}
]]>
   </programlisting>
  </example>

  <example>
   <title>{capture} をテンプレート変数に格納</title>
   <para>この例は、キャプチャ関数の使用法を示すものです。</para>
   <programlisting>
<![CDATA[
{capture name=some_content assign=popText}
{capture some_content assign=popText} {* short-hand *}
The server is {$my_server_name|upper} at {$my_server_addr}<br>
Your ip is {$my_ip}.
{/capture}
<a href="#">{$popText}</a>
]]>
     </programlisting>
  </example>
  
  <example>
   <title>{capture} をテンプレート配列変数に格納</title>
   <para>
    この例は、キャプチャを複数回行って、その結果を配列に格納する方法を示すものです。
   </para>
   <programlisting>
<![CDATA[
{capture append="foo"}hello{/capture}I say just {capture append="foo"}world{/capture}
{foreach $foo as $text}{$text} {/foreach}
]]>
     </programlisting>
   <para>
    上の例の出力は次のようになります。
   </para>
   <screen>
<![CDATA[
I say just hello world
]]>
  </screen>  </example>
  
  
 </para>
 <para>
  <link
   linkend="language.variables.smarty.capture"><parameter>$smarty.capture</parameter></link>、
   <link linkend="language.function.eval"><varname>{eval}</varname></link>、
  <link linkend="language.function.fetch"><varname>{fetch}</varname></link>、
  <link linkend="api.fetch"><varname>fetch()</varname></link>
  および <link linkend="language.function.assign"><varname>{assign}</varname></link>
  も参照ください。
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
