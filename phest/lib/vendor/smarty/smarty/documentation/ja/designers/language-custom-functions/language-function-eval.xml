<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 4712 $ -->
<!-- EN-Revision: 4278 Maintainer: takagi Status: ready -->
<!-- CREDITS: mat-sh,daichi,joe -->
<sect1 id="language.function.eval">
 <title>{eval}</title>
  <para>
   <varname>{eval}</varname> は、与えられた変数をテンプレートとして評価します。
   テンプレート変数又はテンプレートタグを
   変数や設定ファイル内に埋め込むような用途に使われます。
  </para>
  <para>
   <parameter>assign</parameter> 属性が指定されると、
   <varname>{eval}</varname> 関数の出y録はこのテンプレート変数に割り当てられ、
   テンプレートに出力されることはありません。
 </para>

 <informaltable frame="all">
  <tgroup cols="5">
   <colspec colname="param" align="center" />
   <colspec colname="type" align="center" />
   <colspec colname="required" align="center" />
   <colspec colname="default" align="center" />
   <colspec colname="desc" />
   <thead>
    <row>
     <entry>属性名</entry>
     <entry>型</entry>
     <entry>必須</entry>
     <entry>デフォルト</entry>
     <entry>概要</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>var</entry>
     <entry>mixed</entry>
     <entry>Yes</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>評価される変数 (又は文字列)</entry>
    </row>
    <row>
     <entry>assign</entry>
     <entry>string</entry>
     <entry>No</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>出力が割り当てられるテンプレート変数</entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>

 <note>
  <title>テクニカルノート</title>
  <para>
  <itemizedlist>
  <listitem><para>
   評価される変数は、テンプレートと同じように扱われます。
   エスケープやセキュリティ機能も、テンプレートと同様になります。
  </para></listitem>

  <listitem><para>
   評価される変数はリクエスト毎にコンパイルされるので、
   コンパイルされた形式では保存されません。ですが、
   <link linkend="caching">キャッシュ</link> が有効に設定されている場合は、
   残りのテンプレートの出力に関してはキャッシュされます。
  </para></listitem>
  <listitem><para>
   評価するコンテンツがあまり変化しない場合やめったに使われない場合は、かわりに
   <literal>{include file="string:{$template_code}"}</literal> を使うことを検討しましょう。
   これはコンパイル後の状態をキャッシュすることができるので、実行のたびにコンパイラを走らせる (これは比較的時間がかかります) 必要がなくなります。
  </para></listitem>
  </itemizedlist>
  </para>
 </note>

 <example>
  <title>{eval}</title>
<para>設定ファイル <filename>setup.conf</filename></para>
  <programlisting>
<![CDATA[
emphstart = <strong>
emphend = </strong>
title = Welcome to {$company}'s home page!
ErrorCity = You must supply a {#emphstart#}city{#emphend#}.
ErrorState = You must supply a {#emphstart#}state{#emphend#}.
]]>
  </programlisting>
  <para>
   テンプレート
  </para>
  <programlisting>
<![CDATA[
{config_load file='setup.conf'}

{eval var=$foo}
{eval var=#title#}
{eval var=#ErrorCity#}
{eval var=#ErrorState# assign='state_error'}
{$state_error}
]]>
  </programlisting>
  <para>
   上のテンプレートの出力
  </para>
  <screen>
<![CDATA[
This is the contents of foo.
Welcome to Foobar Pub & Grill's home page!
You must supply a <strong>city</strong>.
You must supply a <strong>state</strong>.
]]>
  </screen>
 </example>

  <example>
   <title>もうひとつの {eval} の例</title>
   <para>これは、サーバ名 (大文字変換したもの) と IP を出力します。
   割り当てられる変数 <parameter>$str</parameter> は、
   データベースのクエリから取得します。</para>
   <programlisting role="php">
 <![CDATA[
<?php
$str = 'The server name is {$smarty.server.SERVER_NAME|upper} '
       .'at {$smarty.server.SERVER_ADDR}';
$smarty->assign('foo',$str);
?>
 ]]>
   </programlisting>
   <para>
    テンプレート
   </para>
   <programlisting>
 <![CDATA[
    {eval var=$foo}
 ]]>
   </programlisting>
 </example>


</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
