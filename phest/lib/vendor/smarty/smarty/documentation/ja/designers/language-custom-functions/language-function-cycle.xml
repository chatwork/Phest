<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 3856 $ -->
<!-- EN-Revision: 3827 Maintainer: takagi Status: ready -->
<!-- CREDITS: mat-sh,daichi,joe -->
<sect1 id="language.function.cycle">
 <title>{cycle}</title>
  <para>
   <varname>{cycle}</varname> は、値の設定に従って循環します。
   テーブル内のセルの色を交互に２色もしくはそれ以上の色に変更したり、
   配列の値を循環するような事が簡単に行えます。
 </para>

 <informaltable frame="all">
  <tgroup cols="5">
   <colspec colname="param" align="center" />
   <colspec colname="type" align="center" />
   <colspec colname="required" align="center" />
   <colspec colname="default" align="center" />
   <colspec colname="desc" />
   <thead>
    <row>
     <entry>属性名</entry>
     <entry>型</entry>
     <entry>必須</entry>
     <entry>デフォルト</entry>
     <entry>概要</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>name</entry>
     <entry>string</entry>
     <entry>No</entry>
     <entry><emphasis>default</emphasis></entry>
     <entry>サイクルの名前</entry>
    </row>
    <row>
     <entry>values</entry>
     <entry>mixed</entry>
     <entry>Yes</entry>
     <entry><emphasis>N/A</emphasis></entry>
     <entry>カンマを境界としたリスト (delimiter属性を参照)
      または値の配列のどちらかによって指定する、循環される値
     </entry>
    </row>
    <row>
     <entry>print</entry>
     <entry>boolean</entry>
     <entry>No</entry>
     <entry><emphasis>&true;</emphasis></entry>
     <entry>値を表示するかどうか</entry>
    </row>
    <row>
     <entry>advance</entry>
     <entry>boolean</entry>
     <entry>No</entry>
     <entry><emphasis>&true;</emphasis></entry>
     <entry>次の値に進むかどうか</entry>
    </row>
    <row>
     <entry>delimiter</entry>
     <entry>string</entry>
     <entry>No</entry>
     <entry><emphasis>,</emphasis></entry>
     <entry>value 属性で使用するためのデリミタ</entry>
    </row>
    <row>
     <entry>assign</entry>
     <entry>string</entry>
     <entry>No</entry>
     <entry><emphasis>n/a</emphasis></entry>
     <entry>出力が割り当てられるテンプレート変数</entry>
    </row>
    <row>
     <entry>reset</entry>
     <entry>boolean</entry>
     <entry>No</entry>
     <entry><emphasis>&false;</emphasis></entry>
     <entry>次の値に進まずに、最初の値をセットする。</entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>

<itemizedlist>
 <listitem><para>
  <parameter>name</parameter> 属性を渡す事によって、テンプレート内で
  １つ以上の値のセットを通して <varname>{cycle}</varname> を行えます。
  各 <varname>{cycle}</varname> にはユニークな <parameter>name</parameter>
  を与えてください。
 </para></listitem>
 <listitem><para>
  <parameter>print</parameter> 属性に &false; をセットする事で、
  強制的に現在の値を表示しない事が可能です。これは、
  こっそり値をスキップするのに役に立つでしょう。
 </para></listitem>
 <listitem><para>
  <parameter>advance</parameter> 属性は値を繰り返すために使われます。
  &false; をセットした時に次の <varname>{cycle}</varname> が呼ばれると、
  同じ値を表示します。
 </para></listitem>
 <listitem><para>
  <parameter>assign</parameter> 属性を指定した場合は、
  <varname>{cycle}</varname> 関数の出力は
  テンプレートに出力される代わりにテンプレート変数に割り当てられます。
 </para></listitem>
</itemizedlist>

 <example>
  <title>{cycle}</title>
  <programlisting>
<![CDATA[
{section name=rows loop=$data}
<tr class="{cycle values="odd,even"}">
   <td>{$data[rows]}</td>
</tr>
{/section}
]]>
  </programlisting>
  <para>上のテンプレートの出力</para>
  <screen>
<![CDATA[
<tr class="odd">
   <td>1</td>
</tr>
<tr class="even">
   <td>2</td>
</tr>
<tr class="odd">
   <td>3</td>
</tr>
]]>
  </screen>
 </example>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
