<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 4707 $ -->
<!-- EN-Revision: 4278 Maintainer: takagi Status: ready -->
<!-- CREDITS: mat-sh,daichi,joe -->
<chapter id="config.files">
 <title>設定ファイル</title>
 <para>
  設定ファイルは、１つのファイルからグローバルなテンプレート変数を管理する方法として、
  デザイナーにとって有用です。１つの例としては、テンプレートの色の指定を行う場合です。
  通常、アプリケーションの配色を変更するには全てのテンプレートファイルを調べ、
  該当する箇所の色の指定を変更する必要があります。
  設定ファイルを使うと色の指定を一箇所で管理できるので、
  更新する必要があるファイルは１つだけになります。
 </para>
 <example>
  <title>設定ファイルの記述例</title>
  <programlisting>
<![CDATA[
# グローバル変数
pageTitle = "Main Menu"
bodyBgColor = #000000
tableBgColor = #000000
rowBgColor = #00ff00

[Customer]
pageTitle = "Customer Info"

[Login]
pageTitle = "Login"
focus = "username"
Intro = """This is a value that spans more
           than one line. you must enclose
           it in triple quotes."""

# 隠されたセクション
[.Database]
host=my.example.com
db=ADDRESSBOOK
user=php-user
pass=foobar
]]>
  </programlisting>
 </example>
 <para>
  <link linkend="language.config.variables">設定ファイルの値</link>
  はクォートで囲む事が出来ます(必須ではありません)。
  シングルクォートとダブルクォートのどちらでも使用できます。
  複数行にまたがる値を持つ場合は、値全体をトリプルクォート(""")
  で囲みます。設定ファイルの中にコメントを記述するには、
  行の初めに <literal>#</literal> (ハッシュ) を使う事を推奨します。
 </para>
 <para>
  上記の設定ファイルの例は２つのセクションを持っています。
  セクション名はブラケット[]に囲まれ、<literal>[</literal>
  もしくは <literal>]</literal> を含まない任意の文字列を指定できます。
  先頭の４つの変数は、グローバル変数 (あるいはセクションに含まれない変数)
  です。これらの変数は常に設定ファイルから読み込まれます。
  特定のセクションが読み込まれた場合は、
  グローバル変数に加えてそのセクションからの変数が読み込まれます。
  グローバル変数とセクション内に同じ変数が存在する場合はセクション内の変数が使用されます。
  １つのセクション内に同名の２つの変数を指定した場合は、
  <link linkend="variable.config.overwrite">
  <parameter>$config_overwrite</parameter></link>
  が無効でない限りは後で指定されたものが使用されます。
 </para>
 <para>
  設定ファイルの読み込みは、組み込みのテンプレート関数
  <link linkend="language.function.config.load"><varname>
  {config_load}</varname></link> あるいは API 関数 <link
  linkend="api.config.load"><varname>configLoad()</varname></link>
  によって行います。
 </para>
 <para>
  <literal>[.hidden]</literal> のように変数名又はセクション名の先頭にピリオド (.) をつける事によって、
  変数又は全体のセクションを隠蔽する事ができます。
  アプリケーションからは使用されるがテンプレートエンジンからは使用されないような重要なデータ
  (DB接続に関する情報など) を取得する際に有用です。
  テンプレートを編集をするサードパーティが存在する場合、
  重要なデータを含んだ設定ファイルをテンプレート内に読み込む事によって盗み読まれる危険性を回避できます。
 </para>
 <para>
  設定ファイル (あるいはリソース) のロードには、同じリソース機構をテンプレートとして使います。
  つまり、設定ファイルをデータベースから <literal>$smarty->configLoad("db:my.conf")</literal>
  で読み込みこともできるということです。
 </para>
 <para>
  <link linkend="language.function.config.load"><varname>{config_load}</varname></link>、
  <link linkend="variable.config.overwrite"><parameter>$config_overwrite</parameter></link>、
  <link linkend="variable.default.config.handler.func"><parameter>$default_config_handler_func</parameter></link>、
  <link linkend="api.get.config.vars"><varname>getConfigVars()</varname></link>、
  <link linkend="api.clear.config"><varname>clearConfig()</varname></link>
  および
  <link linkend="api.config.load"><varname>configLoad()</varname></link>
  も参照ください。
 </para>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
